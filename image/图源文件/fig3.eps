%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fig3.pdf
%%Creator: Adobe Acrobat 11.0.0
%%For: Administrator
%%CreationDate: 2015/10/31, 20:06:23
%%BoundingBox: 0 0 435 220
%%HiResBoundingBox: 0 0 434.2500 219.7500
%%CropBox: 0 0 434.2500 219.7500
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 945 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:CreateDate="2015-10-31T20:05:29+08:00"
   xmp:CreatorTool="Microsoft® Visio® 2013"
   xmp:ModifyDate="2015-10-31T20:05:29+08:00"
   pdf:Keywords=""
   pdf:Producer="Microsoft® Visio® 2013">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>51GHO</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -219.75 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 219.75 li
434.25 219.75 li
434.25 0 li
cp
clp
gsave
0 219.75 mo
435 219.75 li
435 -.250029 li
0 -.250029 li
0 219.75 li
clp
18.12 195.525 mo
320.01 195.525 li
320.01 19.775 li
18.12 19.775 li
18.12 195.525 li
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
.75075 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
18.12 195.525 mo
320.01 195.525 li
320.01 19.775 li
18.12 19.775 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
154.89 144.502 mo
154.89 119.45 175.2 99.1499 200.25 99.1499 cv
225.29 99.1499 245.6 119.45 245.6 144.502 cv
245.6 169.55 225.29 189.856 200.25 189.856 cv
175.2 189.856 154.89 169.55 154.89 144.502 cv
1 /0 /CSD get_res sepcs
0 sep
ef
154.736 139.97 mo
154.811 139.213 154.904 138.462 155.014 137.717 cv
155.045 137.512 155.236 137.371 155.441 137.401 cv
155.646 137.432 155.788 137.623 155.757 137.828 cv
155.648 138.561 155.557 139.299 155.483 140.043 cv
155.463 140.25 155.28 140.4 155.073 140.38 cv
154.867 140.36 154.716 140.176 154.736 139.97 cv
154.736 139.97 li
155.404 135.481 mo
155.553 134.736 155.72 133.998 155.905 133.267 cv
155.956 133.066 156.16 132.944 156.361 132.995 cv
156.562 133.046 156.684 133.25 156.633 133.451 cv
156.451 134.17 156.287 134.896 156.14 135.628 cv
156.1 135.831 155.902 135.963 155.699 135.923 cv
155.495 135.882 155.364 135.684 155.404 135.481 cv
155.404 135.481 li
156.516 131.08 mo
156.739 130.353 156.98 129.633 157.237 128.922 cv
157.308 128.727 157.523 128.626 157.718 128.697 cv
157.913 128.768 158.014 128.983 157.943 129.178 cv
157.69 129.878 157.453 130.585 157.234 131.3 cv
157.173 131.499 156.963 131.61 156.765 131.549 cv
156.567 131.489 156.455 131.279 156.516 131.08 cv
158.066 126.803 mo
158.36 126.103 158.671 125.412 158.999 124.73 cv
159.089 124.543 159.313 124.464 159.5 124.554 cv
159.687 124.643 159.765 124.868 159.676 125.055 cv
159.353 125.725 159.047 126.405 158.758 127.094 cv
158.678 127.285 158.458 127.375 158.266 127.295 cv
158.075 127.215 157.986 126.995 158.066 126.803 cv
160.034 122.705 mo
160.396 122.039 160.774 121.382 161.168 120.736 cv
161.276 120.559 161.507 120.503 161.684 120.611 cv
161.861 120.719 161.917 120.95 161.809 121.127 cv
161.422 121.762 161.05 122.408 160.694 123.064 cv
160.595 123.246 160.367 123.313 160.185 123.214 cv
160.002 123.116 159.935 122.888 160.034 122.705 cv
162.399 118.826 mo
162.825 118.199 163.266 117.583 163.722 116.98 cv
163.847 116.814 164.082 116.781 164.248 116.906 cv
164.413 117.031 164.446 117.266 164.321 117.432 cv
163.873 118.026 163.439 118.632 163.02 119.248 cv
162.903 119.42 162.67 119.464 162.498 119.347 cv
162.327 119.231 162.282 118.997 162.399 118.826 cv
165.135 115.201 mo
165.62 114.62 166.12 114.052 166.633 113.495 cv
166.774 113.343 167.011 113.334 167.164 113.474 cv
167.316 113.615 167.326 113.852 167.185 114.005 cv
166.68 114.552 166.188 115.111 165.711 115.683 cv
165.578 115.842 165.341 115.863 165.182 115.73 cv
165.023 115.597 165.002 115.36 165.135 115.201 cv
168.214 111.866 mo
168.754 111.336 169.307 110.82 169.872 110.317 cv
170.027 110.179 170.265 110.193 170.402 110.348 cv
170.54 110.503 170.526 110.74 170.371 110.878 cv
169.815 111.372 169.271 111.881 168.74 112.402 cv
168.592 112.547 168.354 112.545 168.209 112.397 cv
168.064 112.249 168.066 112.011 168.214 111.866 cv
171.605 108.852 mo
172.194 108.378 172.795 107.918 173.407 107.474 cv
173.575 107.352 173.81 107.389 173.932 107.557 cv
174.053 107.725 174.016 107.96 173.848 108.081 cv
173.246 108.519 172.655 108.971 172.075 109.437 cv
171.914 109.566 171.678 109.541 171.548 109.379 cv
171.418 109.218 171.443 108.981 171.605 108.851 cv
171.605 108.852 li
175.275 106.187 mo
175.907 105.775 176.551 105.377 177.204 104.995 cv
177.383 104.891 177.613 104.951 177.717 105.13 cv
177.822 105.309 177.762 105.539 177.583 105.643 cv
176.94 106.019 176.308 106.41 175.686 106.816 cv
175.512 106.929 175.279 106.88 175.166 106.707 cv
175.053 106.533 175.102 106.301 175.275 106.187 cv
175.275 106.187 li
179.189 103.9 mo
179.858 103.553 180.537 103.221 181.225 102.906 cv
181.414 102.82 181.636 102.903 181.723 103.091 cv
181.809 103.28 181.726 103.502 181.538 103.589 cv
180.861 103.899 180.193 104.225 179.535 104.567 cv
179.351 104.662 179.124 104.591 179.029 104.407 cv
178.933 104.223 179.005 103.996 179.189 103.9 cv
183.308 102.015 mo
184.009 101.735 184.718 101.472 185.436 101.226 cv
185.632 101.159 185.846 101.264 185.913 101.46 cv
185.98 101.656 185.875 101.87 185.679 101.937 cv
184.973 102.178 184.275 102.437 183.586 102.712 cv
183.393 102.789 183.175 102.695 183.098 102.502 cv
183.021 102.31 183.115 102.091 183.308 102.015 cv
187.602 100.546 mo
188.327 100.337 189.059 100.147 189.799 99.974 cv
190 99.9268 190.202 100.052 190.25 100.254 cv
190.297 100.456 190.171 100.658 189.969 100.705 cv
189.242 100.875 188.522 101.063 187.809 101.267 cv
187.61 101.324 187.402 101.209 187.345 101.01 cv
187.287 100.811 187.403 100.603 187.602 100.546 cv
192.021 99.5128 mo
192.763 99.3781 193.51 99.2612 194.264 99.1628 cv
194.469 99.1359 194.658 99.2808 194.685 99.4863 cv
194.711 99.6919 194.567 99.8803 194.361 99.9072 cv
193.62 100.004 192.885 100.119 192.155 100.251 cv
191.951 100.288 191.756 100.153 191.719 99.9491 cv
191.682 99.7452 191.817 99.5498 192.021 99.5128 cv
196.521 98.9244 mo
197.271 98.8639 198.027 98.8215 198.787 98.7976 cv
198.994 98.7911 199.167 98.9538 199.174 99.1609 cv
199.18 99.3682 199.018 99.5414 198.811 99.548 cv
198.063 99.5715 197.319 99.6132 196.581 99.6728 cv
196.375 99.6894 196.193 99.5354 196.177 99.3288 cv
196.16 99.1222 196.314 98.9411 196.521 98.9244 cv
201.057 98.7817 mo
201.818 98.7948 202.573 98.8265 203.325 98.8764 cv
203.531 98.8901 203.688 99.0689 203.674 99.2758 cv
203.66 99.4827 203.482 99.6392 203.275 99.6255 cv
202.536 99.5765 201.792 99.5452 201.044 99.5323 cv
200.837 99.5287 200.672 99.3577 200.675 99.1504 cv
200.679 98.9431 200.85 98.7781 201.057 98.7817 cv
205.585 99.0826 mo
206.34 99.1704 207.089 99.2765 207.832 99.4006 cv
208.037 99.4347 208.175 99.6281 208.141 99.8326 cv
208.107 100.037 207.913 100.175 207.709 100.141 cv
206.978 100.019 206.241 99.9147 205.498 99.8284 cv
205.292 99.8044 205.145 99.6181 205.169 99.4122 cv
205.192 99.2062 205.379 99.0587 205.585 99.0826 cv
205.585 99.0826 li
210.061 99.83 mo
210.803 99.9923 211.538 100.172 212.266 100.37 cv
212.466 100.425 212.584 100.631 212.53 100.831 cv
212.476 101.031 212.269 101.149 212.069 101.095 cv
211.353 100.9 210.63 100.723 209.901 100.563 cv
209.698 100.519 209.57 100.319 209.614 100.117 cv
209.659 99.914 209.859 99.7858 210.061 99.83 cv
214.441 101.02 mo
215.164 101.256 215.879 101.509 216.586 101.78 cv
216.78 101.854 216.877 102.071 216.802 102.265 cv
216.728 102.458 216.511 102.555 216.318 102.481 cv
215.623 102.215 214.92 101.966 214.208 101.734 cv
214.011 101.67 213.904 101.458 213.968 101.26 cv
214.032 101.063 214.244 100.956 214.441 101.02 cv
218.689 102.646 mo
219.384 102.952 220.07 103.276 220.746 103.615 cv
220.931 103.708 221.006 103.934 220.913 104.119 cv
220.82 104.304 220.594 104.379 220.409 104.286 cv
219.744 103.952 219.07 103.634 218.386 103.332 cv
218.197 103.249 218.111 103.027 218.194 102.837 cv
218.278 102.648 218.5 102.562 218.689 102.646 cv
222.751 104.686 mo
223.411 105.06 224.061 105.449 224.7 105.855 cv
224.875 105.966 224.927 106.198 224.816 106.373 cv
224.705 106.548 224.473 106.6 224.298 106.489 cv
223.67 106.09 223.03 105.707 222.381 105.339 cv
222.201 105.237 222.137 105.008 222.24 104.827 cv
222.342 104.647 222.571 104.584 222.751 104.686 cv
226.588 107.118 mo
227.207 107.555 227.815 108.007 228.411 108.474 cv
228.574 108.602 228.603 108.837 228.475 109.001 cv
228.347 109.164 228.111 109.193 227.948 109.065 cv
227.362 108.606 226.764 108.162 226.155 107.732 cv
225.986 107.612 225.946 107.378 226.065 107.209 cv
226.185 107.039 226.419 106.999 226.588 107.118 cv
230.164 109.917 mo
230.736 110.413 231.296 110.922 231.843 111.445 cv
231.993 111.589 231.998 111.826 231.855 111.976 cv
231.712 112.126 231.474 112.131 231.324 111.988 cv
230.786 111.474 230.236 110.972 229.673 110.485 cv
229.516 110.349 229.499 110.112 229.634 109.955 cv
229.77 109.799 230.007 109.782 230.164 109.917 cv
233.445 113.054 mo
233.965 113.603 234.472 114.165 234.965 114.739 cv
235.1 114.897 235.082 115.134 234.924 115.268 cv
234.767 115.403 234.53 115.385 234.395 115.228 cv
233.91 114.663 233.412 114.11 232.9 113.57 cv
232.757 113.42 232.764 113.182 232.914 113.04 cv
233.065 112.897 233.302 112.903 233.445 113.054 cv
236.399 116.497 mo
236.863 117.094 237.311 117.703 237.745 118.323 cv
237.864 118.493 237.822 118.727 237.653 118.846 cv
237.483 118.965 237.249 118.923 237.13 118.753 cv
236.703 118.143 236.262 117.545 235.806 116.957 cv
235.679 116.793 235.709 116.558 235.873 116.43 cv
236.036 116.303 236.272 116.333 236.399 116.497 cv
238.998 120.213 mo
239.4 120.852 239.786 121.502 240.156 122.162 cv
240.258 122.343 240.193 122.572 240.013 122.673 cv
239.832 122.775 239.603 122.71 239.502 122.53 cv
239.138 121.88 238.758 121.241 238.363 120.612 cv
238.252 120.437 238.305 120.205 238.481 120.095 cv
238.657 119.985 238.888 120.038 238.998 120.213 cv
241.216 124.166 mo
241.552 124.841 241.871 125.526 242.174 126.219 cv
242.257 126.409 242.17 126.63 241.98 126.713 cv
241.79 126.796 241.569 126.709 241.486 126.52 cv
241.188 125.837 240.874 125.164 240.544 124.5 cv
240.451 124.315 240.527 124.089 240.713 123.997 cv
240.898 123.905 241.123 123.98 241.216 124.166 cv
243.028 128.317 mo
243.296 129.023 243.546 129.737 243.779 130.459 cv
243.842 130.656 243.734 130.868 243.537 130.932 cv
243.339 130.995 243.128 130.887 243.064 130.689 cv
242.835 129.979 242.589 129.277 242.326 128.582 cv
242.253 128.389 242.351 128.172 242.544 128.098 cv
242.738 128.025 242.955 128.123 243.028 128.317 cv
243.028 128.317 li
244.421 132.636 mo
244.616 133.365 244.794 134.101 244.953 134.843 cv
244.997 135.046 244.868 135.245 244.665 135.289 cv
244.463 135.333 244.263 135.204 244.219 135.001 cv
244.062 134.271 243.888 133.547 243.696 132.831 cv
243.642 132.63 243.761 132.425 243.961 132.371 cv
244.161 132.317 244.367 132.436 244.421 132.636 cv
244.421 132.636 li
245.375 137.073 mo
245.496 137.817 245.6 138.567 245.685 139.322 cv
245.708 139.528 245.56 139.714 245.354 139.737 cv
245.148 139.76 244.962 139.612 244.939 139.406 cv
244.855 138.663 244.754 137.926 244.634 137.194 cv
244.601 136.99 244.739 136.797 244.944 136.763 cv
245.149 136.73 245.342 136.869 245.375 137.073 cv
245.375 137.073 li
245.884 141.583 mo
245.931 142.334 245.96 143.09 245.971 143.851 cv
245.974 144.058 245.808 144.228 245.601 144.231 cv
245.393 144.234 245.223 144.069 245.22 143.861 cv
245.21 143.113 245.181 142.369 245.134 141.63 cv
245.121 141.423 245.279 141.245 245.485 141.232 cv
245.692 141.219 245.871 141.376 245.884 141.583 cv
245.947 146.12 mo
245.921 146.88 245.876 147.636 245.813 148.386 cv
245.795 148.593 245.614 148.746 245.407 148.729 cv
245.201 148.711 245.047 148.53 245.065 148.323 cv
245.127 147.585 245.171 146.842 245.197 146.094 cv
245.204 145.887 245.378 145.725 245.585 145.732 cv
245.792 145.739 245.954 145.913 245.947 146.12 cv
245.566 150.642 mo
245.465 151.395 245.346 152.143 245.209 152.884 cv
245.171 153.088 244.975 153.222 244.771 153.185 cv
244.567 153.147 244.433 152.951 244.47 152.747 cv
244.606 152.018 244.723 151.283 244.822 150.542 cv
244.85 150.337 245.039 150.193 245.244 150.22 cv
245.45 150.248 245.594 150.437 245.566 150.642 cv
244.74 155.105 mo
244.564 155.844 244.371 156.575 244.16 157.3 cv
244.102 157.499 243.894 157.613 243.695 157.555 cv
243.496 157.497 243.381 157.289 243.439 157.09 cv
243.646 156.378 243.837 155.658 244.009 154.931 cv
244.057 154.73 244.259 154.605 244.461 154.653 cv
244.663 154.701 244.787 154.903 244.74 155.105 cv
243.471 159.463 mo
243.223 160.181 242.957 160.892 242.674 161.594 cv
242.596 161.786 242.377 161.879 242.185 161.801 cv
241.993 161.724 241.9 161.505 241.977 161.313 cv
242.256 160.623 242.517 159.924 242.762 159.217 cv
242.83 159.021 243.044 158.918 243.239 158.985 cv
243.435 159.053 243.539 159.267 243.471 159.463 cv
241.771 163.681 mo
241.452 164.37 241.116 165.05 240.765 165.72 cv
240.668 165.903 240.441 165.974 240.258 165.878 cv
240.074 165.782 240.003 165.555 240.1 165.371 cv
240.446 164.712 240.776 164.043 241.089 163.366 cv
241.176 163.177 241.399 163.096 241.587 163.183 cv
241.776 163.27 241.858 163.493 241.771 163.681 cv
239.659 167.706 mo
239.273 168.359 238.872 169.002 238.456 169.633 cv
238.342 169.806 238.109 169.854 237.936 169.74 cv
237.763 169.626 237.715 169.393 237.829 169.22 cv
238.238 168.599 238.633 167.967 239.012 167.324 cv
239.117 167.145 239.348 167.086 239.526 167.191 cv
239.705 167.297 239.764 167.527 239.659 167.706 cv
237.159 171.499 mo
236.711 172.11 236.249 172.709 235.772 173.297 cv
235.641 173.458 235.405 173.483 235.244 173.352 cv
235.083 173.221 235.058 172.985 235.189 172.824 cv
235.658 172.246 236.113 171.656 236.553 171.055 cv
236.676 170.888 236.911 170.851 237.078 170.974 cv
237.245 171.096 237.281 171.331 237.159 171.499 cv
234.298 175.024 mo
233.792 175.588 233.273 176.139 232.741 176.676 cv
232.595 176.824 232.357 176.825 232.21 176.679 cv
232.063 176.533 232.061 176.295 232.207 176.148 cv
232.731 175.619 233.242 175.077 233.739 174.523 cv
233.877 174.369 234.115 174.356 234.269 174.494 cv
234.423 174.633 234.436 174.87 234.298 175.024 cv
231.104 178.249 mo
230.546 178.76 229.976 179.257 229.393 179.739 cv
229.233 179.872 228.997 179.849 228.864 179.69 cv
228.732 179.53 228.754 179.293 228.914 179.161 cv
229.487 178.686 230.049 178.198 230.598 177.695 cv
230.751 177.556 230.988 177.566 231.128 177.719 cv
231.268 177.872 231.257 178.109 231.104 178.249 cv
227.61 181.143 mo
227.005 181.596 226.389 182.034 225.761 182.456 cv
225.589 182.572 225.356 182.527 225.24 182.355 cv
225.124 182.183 225.17 181.949 225.342 181.834 cv
225.959 181.418 226.565 180.987 227.161 180.542 cv
227.327 180.418 227.562 180.451 227.686 180.618 cv
227.81 180.783 227.776 181.019 227.61 181.143 cv
223.849 183.676 mo
223.203 184.066 222.547 184.441 221.88 184.8 cv
221.698 184.898 221.47 184.83 221.372 184.647 cv
221.274 184.464 221.342 184.237 221.525 184.139 cv
222.18 183.786 222.826 183.417 223.461 183.034 cv
223.639 182.926 223.87 182.983 223.977 183.161 cv
224.084 183.338 224.027 183.569 223.849 183.676 cv
219.859 185.824 mo
219.178 186.147 218.488 186.455 217.789 186.745 cv
217.598 186.825 217.378 186.734 217.298 186.543 cv
217.219 186.351 217.309 186.132 217.501 186.052 cv
218.188 185.766 218.867 185.464 219.536 185.146 cv
219.723 185.057 219.947 185.136 220.036 185.323 cv
220.125 185.511 220.046 185.735 219.859 185.824 cv
215.677 187.562 mo
214.967 187.817 214.248 188.055 213.522 188.275 cv
213.323 188.335 213.114 188.223 213.054 188.024 cv
212.993 187.826 213.106 187.616 213.304 187.556 cv
214.018 187.34 214.725 187.106 215.424 186.856 cv
215.619 186.786 215.834 186.887 215.904 187.082 cv
215.974 187.277 215.872 187.492 215.677 187.562 cv
211.333 188.878 mo
210.602 189.06 209.863 189.225 209.118 189.372 cv
208.914 189.412 208.717 189.279 208.677 189.076 cv
208.637 188.872 208.769 188.675 208.973 188.635 cv
209.706 188.491 210.432 188.329 211.152 188.15 cv
211.353 188.1 211.557 188.222 211.607 188.423 cv
211.657 188.624 211.534 188.828 211.333 188.878 cv
206.88 189.754 mo
206.135 189.862 205.384 189.953 204.627 190.024 cv
204.42 190.044 204.237 189.893 204.218 189.686 cv
204.198 189.48 204.349 189.297 204.556 189.277 cv
205.3 189.206 206.039 189.118 206.772 189.011 cv
206.978 188.981 207.168 189.123 207.198 189.328 cv
207.228 189.534 207.085 189.724 206.88 189.754 cv
202.363 190.183 mo
201.662 190.215 200.958 190.231 200.25 190.231 cv
200.093 190.231 li
199.886 190.23 199.718 190.062 199.719 189.854 cv
199.72 189.647 199.888 189.48 200.096 189.48 cv
200.25 189.481 li
200.947 189.481 201.64 189.465 202.329 189.433 cv
202.536 189.424 202.711 189.584 202.721 189.791 cv
202.73 189.998 202.57 190.174 202.363 190.183 cv
197.825 190.168 mo
197.065 190.129 196.311 190.07 195.562 189.994 cv
195.356 189.973 195.205 189.789 195.226 189.583 cv
195.247 189.376 195.432 189.226 195.638 189.247 cv
196.375 189.322 197.117 189.379 197.864 189.418 cv
198.071 189.429 198.23 189.606 198.219 189.813 cv
198.208 190.02 198.032 190.179 197.825 190.168 cv
193.31 189.708 mo
192.559 189.594 191.814 189.461 191.075 189.311 cv
190.872 189.269 190.741 189.071 190.782 188.868 cv
190.824 188.665 191.022 188.534 191.225 188.575 cv
191.951 188.723 192.684 188.854 193.423 188.966 cv
193.628 188.997 193.769 189.189 193.738 189.394 cv
193.706 189.599 193.515 189.739 193.31 189.708 cv
188.863 188.802 mo
188.127 188.614 187.399 188.408 186.679 188.184 cv
186.48 188.123 186.37 187.912 186.431 187.714 cv
186.493 187.516 186.703 187.406 186.901 187.467 cv
187.61 187.687 188.326 187.89 189.049 188.075 cv
189.25 188.127 189.371 188.331 189.32 188.532 cv
189.268 188.733 189.064 188.854 188.863 188.802 cv
184.523 187.455 mo
183.809 187.194 183.104 186.915 182.407 186.62 cv
182.216 186.539 182.127 186.319 182.208 186.128 cv
182.289 185.937 182.509 185.848 182.7 185.929 cv
183.385 186.219 184.079 186.493 184.781 186.75 cv
184.975 186.822 185.076 187.037 185.004 187.232 cv
184.933 187.427 184.717 187.527 184.523 187.455 cv
180.336 185.68 mo
179.653 185.349 178.979 185.002 178.316 184.638 cv
178.134 184.539 178.067 184.311 178.167 184.129 cv
178.266 183.947 178.494 183.88 178.676 183.98 cv
179.329 184.337 179.991 184.679 180.663 185.004 cv
180.85 185.095 180.928 185.319 180.838 185.506 cv
180.747 185.692 180.523 185.77 180.336 185.68 cv
176.35 183.498 mo
175.704 183.101 175.068 182.688 174.444 182.261 cv
174.273 182.144 174.229 181.91 174.346 181.739 cv
174.463 181.568 174.697 181.524 174.868 181.641 cv
175.482 182.062 176.107 182.468 176.743 182.858 cv
176.919 182.966 176.975 183.198 176.866 183.374 cv
176.758 183.551 176.527 183.606 176.35 183.498 cv
172.602 180.932 mo
171.999 180.473 171.407 180.001 170.828 179.513 cv
170.669 179.38 170.649 179.143 170.782 178.984 cv
170.916 178.826 171.153 178.805 171.311 178.939 cv
171.881 179.418 172.463 179.883 173.056 180.334 cv
173.221 180.46 173.253 180.695 173.128 180.86 cv
173.002 181.025 172.767 181.057 172.602 180.932 cv
169.127 178.01 mo
168.572 177.494 168.031 176.966 167.502 176.424 cv
167.358 176.276 167.361 176.038 167.509 175.893 cv
167.657 175.748 167.895 175.751 168.04 175.9 cv
168.56 176.433 169.092 176.953 169.638 177.459 cv
169.79 177.601 169.799 177.838 169.657 177.99 cv
169.516 178.142 169.279 178.151 169.127 178.01 cv
165.958 174.76 mo
165.458 174.194 164.971 173.615 164.499 173.023 cv
164.369 172.861 164.396 172.625 164.558 172.496 cv
164.72 172.366 164.956 172.393 165.085 172.555 cv
165.55 173.136 166.029 173.706 166.521 174.263 cv
166.658 174.419 166.644 174.656 166.488 174.793 cv
166.333 174.931 166.096 174.916 165.958 174.76 cv
163.127 171.217 mo
162.685 170.604 162.258 169.98 161.846 169.345 cv
161.733 169.171 161.783 168.938 161.957 168.826 cv
162.131 168.713 162.363 168.762 162.476 168.936 cv
162.881 169.561 163.301 170.175 163.736 170.778 cv
163.857 170.946 163.819 171.18 163.651 171.302 cv
163.483 171.423 163.248 171.385 163.127 171.217 cv
160.66 167.412 mo
160.281 166.76 159.918 166.097 159.572 165.424 cv
159.477 165.24 159.549 165.013 159.733 164.918 cv
159.918 164.823 160.144 164.896 160.239 165.08 cv
160.58 165.741 160.937 166.394 161.31 167.035 cv
161.414 167.215 161.352 167.445 161.173 167.549 cv
160.994 167.653 160.764 167.592 160.66 167.412 cv
158.584 163.385 mo
158.272 162.698 157.977 162.003 157.699 161.299 cv
157.623 161.107 157.717 160.889 157.91 160.812 cv
158.103 160.736 158.321 160.831 158.397 161.023 cv
158.671 161.716 158.961 162.399 159.267 163.074 cv
159.353 163.263 159.27 163.485 159.081 163.571 cv
158.892 163.657 158.67 163.573 158.584 163.385 cv
156.918 159.168 mo
156.676 158.453 156.451 157.73 156.244 157 cv
156.187 156.801 156.303 156.593 156.503 156.537 cv
156.702 156.48 156.91 156.596 156.966 156.795 cv
157.17 157.514 157.391 158.224 157.629 158.927 cv
157.695 159.124 157.59 159.337 157.394 159.403 cv
157.197 159.47 156.984 159.364 156.918 159.168 cv
155.68 154.802 mo
155.51 154.067 155.359 153.325 155.226 152.578 cv
155.189 152.373 155.325 152.179 155.529 152.142 cv
155.733 152.106 155.928 152.242 155.965 152.446 cv
156.096 153.181 156.245 153.911 156.411 154.633 cv
156.458 154.835 156.332 155.037 156.13 155.083 cv
155.928 155.13 155.726 155.004 155.68 154.802 cv
154.883 150.334 mo
154.788 149.587 154.711 148.834 154.652 148.076 cv
154.636 147.869 154.791 147.689 154.998 147.673 cv
155.204 147.657 155.385 147.811 155.401 148.018 cv
155.458 148.764 155.534 149.504 155.628 150.239 cv
155.654 150.445 155.509 150.633 155.303 150.659 cv
155.097 150.685 154.909 150.539 154.883 150.334 cv
154.533 145.809 mo
154.521 145.375 154.515 144.939 154.515 144.502 cv
154.515 143.741 154.533 142.985 154.57 142.233 cv
154.58 142.026 154.756 141.867 154.963 141.877 cv
155.17 141.887 155.33 142.063 155.32 142.27 cv
155.284 143.009 155.265 143.753 155.265 144.502 cv
155.265 144.932 155.271 145.361 155.283 145.788 cv
155.289 145.995 155.126 146.168 154.919 146.174 cv
154.712 146.18 154.539 146.017 154.533 145.809 cv
1 /0 /CSD get_res sepcs
1 sep
f
213.32 115.52 mo
196.92 106.53 168.78 113.23 163.84 130.857 cv
160.85 141.532 166.38 156.216 174.5 164.752 cv
179.7 170.22 185.97 173.166 193.22 175.606 cv
197.12 176.92 201.31 178.088 205.37 178.163 cv
219.18 178.418 231.61 166.078 234.36 153.373 cv
237.78 137.584 226.26 121.23 213.32 115.52 cv
/1 
[/DeviceCMYK] /CSA add_res
.0758679 .0339361 .00259403 0 cmyk
ef
213.32 115.52 mo
213.14 115.849 li
208.286 113.188 202.365 111.912 196.324 111.912 cv
189.282 111.911 182.081 113.646 176.233 116.899 cv
170.382 120.153 165.896 124.911 164.201 130.958 cv
163.651 132.924 163.393 135.036 163.393 137.226 cv
163.386 146.703 168.243 157.638 174.772 164.493 cv
179.913 169.898 186.112 172.817 193.34 175.25 cv
197.226 176.561 201.384 177.715 205.377 177.788 cv
205.515 177.79 205.653 177.792 205.791 177.792 cv
212.497 177.793 218.875 174.785 223.918 170.208 cv
228.96 165.633 232.653 159.493 233.993 153.294 cv
234.401 151.409 234.594 149.515 234.594 147.632 cv
234.608 133.968 224.407 120.812 213.168 115.863 cv
213.14 115.849 li
213.32 115.52 li
213.472 115.177 li
224.979 120.265 235.331 133.591 235.344 147.632 cv
235.345 149.566 235.147 151.514 234.727 153.452 cv
233.345 159.829 229.574 166.086 224.422 170.764 cv
219.271 175.44 212.726 178.541 205.791 178.542 cv
205.649 178.542 205.506 178.541 205.363 178.538 cv
201.236 178.461 197.014 177.279 193.1 175.962 cv
185.828 173.515 179.487 170.542 174.228 165.011 cv
167.566 157.999 162.649 146.954 162.642 137.226 cv
162.642 134.977 162.907 132.798 163.479 130.756 cv
165.241 124.467 169.893 119.565 175.868 116.243 cv
181.846 112.92 189.159 111.162 196.324 111.161 cv
202.469 111.162 208.509 112.455 213.5 115.191 cv
213.32 115.52 li
213.472 115.177 li
213.32 115.52 li
1 /0 /CSD get_res sepcs
1 sep
f
35.837 92.0599 mo
35.837 64.66 58.046 42.45 85.443 42.45 cv
112.84 42.45 135.05 64.66 135.05 92.0599 cv
135.05 119.46 112.84 141.667 85.443 141.667 cv
58.046 141.667 35.837 119.46 35.837 92.0599 cv
1 /0 /CSD get_res sepcs
0 sep
ef
35.6641 87.5297 mo
35.7321 86.7734 35.8169 86.022 35.9181 85.2757 cv
35.9459 85.0703 36.1351 84.9264 36.3406 84.9543 cv
36.546 84.9821 36.6899 85.1713 36.662 85.3767 cv
36.5623 86.1117 36.4788 86.8519 36.4119 87.5969 cv
36.3933 87.8033 36.2109 87.9557 36.0044 87.9372 cv
35.7979 87.9187 35.6456 87.7362 35.6641 87.5297 cv
36.274 83.0356 mo
36.4102 82.289 36.5628 81.5483 36.7317 80.8138 cv
36.7782 80.6116 36.9796 80.4855 37.1817 80.532 cv
37.3837 80.5784 37.5098 80.7799 37.4634 80.9819 cv
37.297 81.7054 37.1467 82.4349 37.0127 83.1702 cv
36.9755 83.3742 36.78 83.5094 36.576 83.4722 cv
36.3721 83.435 36.2369 83.2394 36.274 83.0356 cv
37.2904 78.615 mo
37.4939 77.8845 37.7136 77.1608 37.949 76.4441 cv
38.0137 76.2471 38.2258 76.14 38.4228 76.2047 cv
38.6197 76.2693 38.727 76.4815 38.6623 76.6785 cv
38.4303 77.3842 38.2141 78.097 38.0136 78.8165 cv
37.9579 79.0162 37.7509 79.133 37.5513 79.0774 cv
37.3516 79.0217 37.2347 78.8147 37.2904 78.615 cv
38.7082 74.3004 mo
38.9781 73.5905 39.2636 72.8883 39.5645 72.1943 cv
39.6469 72.004 39.868 71.9167 40.0581 71.9991 cv
40.2484 72.0817 40.3357 72.3026 40.2533 72.4929 cv
39.957 73.1764 39.6757 73.8679 39.41 74.567 cv
39.3362 74.7609 39.1194 74.8582 38.9257 74.7846 cv
38.7319 74.7109 38.6345 74.4941 38.7082 74.3004 cv
40.5158 70.1302 mo
40.8491 69.4489 41.1972 68.7761 41.56 68.1125 cv
41.6596 67.9305 41.8876 67.8637 42.0696 67.9632 cv
42.2514 68.0626 42.3183 68.2907 42.2188 68.4726 cv
41.8614 69.1262 41.5184 69.7888 41.1902 70.4601 cv
41.0992 70.6463 40.8744 70.7234 40.6882 70.6324 cv
40.5019 70.5413 40.4248 70.3166 40.5158 70.1302 cv
42.6949 66.1448 mo
43.0882 65.4971 43.4959 64.8591 43.9175 64.2312 cv
44.033 64.0591 44.2663 64.0132 44.4383 64.1288 cv
44.6105 64.2443 44.6563 64.4776 44.5408 64.6496 cv
44.1256 65.2682 43.724 65.8966 43.3365 66.5345 cv
43.2289 66.7117 42.9979 66.7681 42.8208 66.6604 cv
42.6436 66.5528 42.5872 66.322 42.6949 66.1448 cv
45.2253 62.3755 mo
45.6753 61.7667 46.1389 61.1684 46.6154 60.5812 cv
46.746 60.4203 46.9824 60.3956 47.1433 60.5263 cv
47.3044 60.657 47.3289 60.8933 47.1983 61.0543 cv
46.7289 61.6327 46.2723 62.222 45.8289 62.8218 cv
45.7058 62.9884 45.4707 63.0237 45.304 62.9005 cv
45.1373 62.7772 45.1021 62.5422 45.2253 62.3755 cv
48.0848 58.852 mo
48.5875 58.2867 49.1028 57.733 49.6305 57.1912 cv
49.7751 57.0427 50.0127 57.0394 50.1612 57.1841 cv
50.3098 57.3288 50.3129 57.5664 50.1683 57.7149 cv
49.6486 58.2486 49.141 58.7941 48.6458 59.3509 cv
48.508 59.5058 48.2708 59.5197 48.1158 59.3819 cv
47.9609 59.2442 47.947 59.0069 48.0848 58.852 cv
51.249 55.6021 mo
51.8002 55.0849 52.363 54.5801 52.9372 54.088 cv
53.0947 53.953 53.3317 53.9713 53.4666 54.1287 cv
53.6015 54.2862 53.5832 54.5231 53.4259 54.658 cv
52.8601 55.1427 52.3057 55.6401 51.7628 56.1495 cv
51.6116 56.2914 51.374 56.2839 51.2321 56.1327 cv
51.0903 55.9815 51.0979 55.744 51.249 55.6021 cv
54.6917 52.6518 mo
55.2868 52.1868 55.8925 51.735 56.5088 51.2967 cv
56.6778 51.1766 56.9121 51.2161 57.0322 51.385 cv
57.1525 51.554 57.1128 51.7884 56.9439 51.9085 cv
56.3369 52.3402 55.7402 52.7852 55.1541 53.2434 cv
54.9907 53.371 54.7547 53.3421 54.6271 53.1788 cv
54.4995 53.0154 54.5283 52.7794 54.6917 52.6518 cv
58.3848 50.0254 mo
59.0189 49.6164 59.6627 49.2213 60.3159 48.8407 cv
60.4951 48.7363 60.7248 48.797 60.8293 48.976 cv
60.9336 49.1551 60.8731 49.385 60.6939 49.4893 cv
60.0504 49.8643 59.4163 50.2533 58.7918 50.6563 cv
58.6176 50.7687 58.3853 50.7186 58.2729 50.5443 cv
58.1605 50.3701 58.2106 50.1378 58.3848 50.0254 cv
62.2982 47.7451 mo
62.966 47.3955 63.6425 47.0608 64.3276 46.741 cv
64.5155 46.6533 64.7388 46.7345 64.8265 46.9224 cv
64.9142 47.1102 64.833 47.3336 64.6452 47.4212 cv
63.9704 47.7362 63.3041 48.066 62.6463 48.4103 cv
62.4627 48.5064 62.2359 48.4354 62.1398 48.2517 cv
62.0436 48.0681 62.1146 47.8413 62.2982 47.7451 cv
66.3998 45.8306 mo
67.0975 45.5429 67.8031 45.2705 68.5163 45.0138 cv
68.7113 44.9436 68.9264 45.0449 68.9965 45.2399 cv
69.0667 45.435 68.9656 45.65 68.7704 45.7202 cv
68.0681 45.973 67.3732 46.2412 66.686 46.5246 cv
66.4944 46.6036 66.2749 46.5124 66.196 46.3207 cv
66.1169 46.1291 66.2082 45.9096 66.3998 45.8306 cv
70.6677 44.2947 mo
71.3883 44.072 72.1158 43.8652 72.8498 43.6746 cv
73.0505 43.6226 73.2554 43.743 73.3074 43.9437 cv
73.3596 44.1443 73.2392 44.3492 73.0385 44.4013 cv
72.3155 44.589 71.599 44.7927 70.8894 45.0119 cv
70.6914 45.0732 70.4811 44.9622 70.4199 44.7641 cv
70.3587 44.5661 70.4697 44.3559 70.6677 44.2947 cv
75.058 43.1551 mo
75.7952 42.9992 76.5384 42.8597 77.2873 42.7368 cv
77.4919 42.7033 77.685 42.8419 77.7186 43.0464 cv
77.7521 43.251 77.6135 43.4441 77.409 43.4776 cv
76.6714 43.5987 75.9393 43.7361 75.2131 43.8896 cv
75.0104 43.9325 74.8111 43.8028 74.7683 43.5999 cv
74.7254 43.3972 74.8551 43.198 75.058 43.1551 cv
79.5333 42.4203 mo
80.281 42.3323 81.0338 42.2607 81.7912 42.206 cv
81.998 42.1911 82.1778 42.3466 82.1927 42.5534 cv
82.2076 42.7601 82.0521 42.9399 81.8453 42.9548 cv
81.0992 43.0087 80.3577 43.0792 79.6212 43.166 cv
79.4153 43.1902 79.2287 43.043 79.2045 42.8371 cv
79.1802 42.6312 79.3274 42.4446 79.5333 42.4203 cv
84.0567 42.0935 mo
84.5174 42.0809 84.9794 42.0747 85.443 42.0746 cv
85.7377 42.0746 86.0318 42.0772 86.3253 42.0822 cv
86.5326 42.0859 86.6977 42.2568 86.6941 42.4641 cv
86.6905 42.6713 86.5196 42.8365 86.3123 42.833 cv
86.0231 42.8279 85.7333 42.8254 85.443 42.8253 cv
84.9863 42.8254 84.531 42.8316 84.0772 42.8439 cv
83.87 42.8496 83.6974 42.6862 83.6917 42.4789 cv
83.6861 42.2717 83.8495 42.0991 84.0567 42.0934 cv
84.0567 42.0935 li
88.5914 42.1722 mo
89.3495 42.2193 90.1029 42.2833 90.8515 42.3639 cv
91.0575 42.386 91.2067 42.5712 91.1845 42.7773 cv
91.1623 42.9834 90.9773 43.1325 90.7711 43.1103 cv
90.0338 43.031 89.2916 42.968 88.5448 42.9215 cv
88.3379 42.9086 88.1807 42.7305 88.1935 42.5236 cv
88.2064 42.3167 88.3845 42.1593 88.5914 42.1722 cv
93.1007 42.6576 mo
93.8508 42.7729 94.5955 42.905 95.3343 43.0534 cv
95.5375 43.0942 95.6692 43.292 95.6284 43.4953 cv
95.5876 43.6985 95.3898 43.8302 95.1865 43.7894 cv
94.4588 43.6434 93.7254 43.5132 92.9865 43.3997 cv
92.7816 43.3682 92.641 43.1765 92.6726 42.9716 cv
92.7041 42.7667 92.8957 42.6262 93.1007 42.6576 cv
97.5476 43.5505 mo
98.2837 43.7336 99.0133 43.933 99.736 44.1483 cv
99.9348 44.2075 100.048 44.4165 99.9887 44.6153 cv
99.9294 44.8139 99.7204 44.9271 99.5217 44.8678 cv
98.8099 44.6558 98.0913 44.4593 97.3664 44.279 cv
97.1652 44.229 97.0427 44.0254 97.0928 43.8241 cv
97.1427 43.623 97.3465 43.5005 97.5476 43.5505 cv
101.895 44.8456 mo
102.612 45.0956 103.322 45.3614 104.024 45.6428 cv
104.217 45.7199 104.31 45.9385 104.233 46.1309 cv
104.156 46.3233 103.938 46.4168 103.745 46.3397 cv
103.054 46.0626 102.354 45.8007 101.648 45.5545 cv
101.452 45.4864 101.349 45.2723 101.417 45.0766 cv
101.485 44.8808 101.699 44.7774 101.895 44.8456 cv
106.115 46.5365 mo
106.805 46.8505 107.488 47.18 108.161 47.5243 cv
108.346 47.6186 108.419 47.8447 108.324 48.0293 cv
108.23 48.2139 108.004 48.2871 107.819 48.1927 cv
107.156 47.8537 106.484 47.5293 105.804 47.2198 cv
105.615 47.134 105.532 46.9114 105.617 46.7227 cv
105.703 46.534 105.926 46.4505 106.115 46.5365 cv
110.16 48.6041 mo
110.818 48.9795 111.467 49.3694 112.107 49.7734 cv
112.282 49.8842 112.334 50.116 112.224 50.2912 cv
112.113 50.4666 111.881 50.5188 111.706 50.4081 cv
111.076 50.0101 110.437 49.6261 109.788 49.2563 cv
109.608 49.1537 109.545 48.9244 109.648 48.7444 cv
109.75 48.5642 109.98 48.5014 110.16 48.6041 cv
113.998 51.0296 mo
114.619 51.4628 115.23 51.9097 115.83 52.3699 cv
115.995 52.496 116.026 52.7316 115.9 52.8962 cv
115.774 53.0607 115.538 53.0918 115.374 52.9657 cv
114.782 52.5123 114.181 52.0722 113.569 51.6454 cv
113.399 51.5268 113.357 51.2929 113.476 51.1228 cv
113.594 50.9528 113.828 50.9111 113.998 51.0296 cv
117.6 53.7913 mo
118.179 54.2784 118.747 54.7784 119.303 55.2908 cv
119.455 55.4313 119.465 55.6687 119.324 55.8212 cv
119.184 55.9736 118.946 55.9834 118.794 55.843 cv
118.246 55.3381 117.687 54.8457 117.116 54.3658 cv
116.958 54.2324 116.937 53.9955 117.071 53.8368 cv
117.204 53.6783 117.441 53.6578 117.6 53.7913 cv
120.936 56.8653 mo
121.468 57.4022 121.988 57.951 122.496 58.5115 cv
122.635 58.6652 122.623 58.9024 122.47 59.0416 cv
122.316 59.1808 122.079 59.1691 121.94 59.0155 cv
121.44 58.4634 120.927 57.9227 120.403 57.3939 cv
120.257 57.2467 120.258 57.009 120.405 56.863 cv
120.552 56.7171 120.79 56.7181 120.936 56.8653 cv
120.936 56.8653 li
123.98 60.226 mo
124.461 60.808 124.93 61.4013 125.385 62.0053 cv
125.51 62.1708 125.477 62.4061 125.311 62.5309 cv
125.146 62.6557 124.91 62.6226 124.785 62.4571 cv
124.337 61.8622 123.876 61.2778 123.402 60.7044 cv
123.269 60.5446 123.292 60.308 123.452 60.1759 cv
123.611 60.0438 123.848 60.0662 123.98 60.226 cv
126.708 63.8457 mo
127.134 64.4684 127.547 65.1011 127.946 65.7436 cv
128.055 65.9198 128.001 66.1512 127.825 66.2606 cv
127.648 66.3699 127.417 66.3157 127.308 66.1395 cv
126.915 65.5065 126.509 64.8833 126.088 64.27 cv
125.971 64.0989 126.015 63.8653 126.186 63.7482 cv
126.357 63.631 126.591 63.6747 126.708 63.8457 cv
129.096 67.6952 mo
129.464 68.3532 129.817 69.0203 130.156 69.6963 cv
130.249 69.8816 130.174 70.1073 129.989 70.2 cv
129.803 70.2929 129.578 70.218 129.485 70.0327 cv
129.151 69.3669 128.803 68.7098 128.441 68.0616 cv
128.34 67.8807 128.404 67.652 128.585 67.5508 cv
128.766 67.4496 128.995 67.5143 129.096 67.6952 cv
131.124 71.7429 mo
131.43 72.4307 131.722 73.1268 131.997 73.8306 cv
132.073 74.0237 131.978 74.2414 131.785 74.317 cv
131.592 74.3927 131.374 74.2975 131.298 74.1045 cv
131.027 73.4113 130.74 72.7258 130.438 72.0484 cv
130.354 71.859 130.439 71.637 130.628 71.5527 cv
130.818 71.4684 131.04 71.5535 131.124 71.7429 cv
132.776 75.9612 mo
133.019 76.6753 133.246 77.3968 133.457 78.1251 cv
133.515 78.3241 133.4 78.5323 133.201 78.5901 cv
133.002 78.6477 132.794 78.533 132.736 78.3339 cv
132.528 77.6166 132.305 76.9062 132.066 76.2028 cv
131.999 76.0065 132.104 75.7932 132.3 75.7266 cv
132.496 75.6598 132.71 75.7648 132.776 75.9612 cv
134.038 80.3177 mo
134.215 81.0506 134.375 81.7896 134.519 82.5347 cv
134.558 82.7382 134.425 82.9351 134.221 82.9743 cv
134.018 83.0136 133.821 82.8804 133.782 82.6769 cv
133.64 81.9431 133.482 81.2153 133.309 80.4935 cv
133.26 80.2919 133.384 80.0891 133.586 80.0407 cv
133.787 79.9921 133.99 80.1161 134.038 80.3177 cv
134.898 84.7711 mo
135.007 85.5163 135.099 86.2667 135.175 87.0222 cv
135.195 87.2285 135.045 87.4125 134.839 87.4331 cv
134.632 87.4538 134.448 87.3033 134.428 87.097 cv
134.353 86.3528 134.262 85.6135 134.155 84.8796 cv
134.125 84.6744 134.267 84.4838 134.472 84.4539 cv
134.677 84.4239 134.868 84.5659 134.898 84.7711 cv
135.35 89.2835 mo
135.391 90.035 135.415 90.7908 135.423 91.5507 cv
135.425 91.7581 135.258 91.9278 135.051 91.9299 cv
134.844 91.932 134.674 91.7656 134.672 91.5583 cv
134.665 90.8096 134.64 90.0648 134.6 89.3245 cv
134.589 89.1175 134.747 88.9406 134.954 88.9292 cv
135.161 88.9179 135.338 89.0765 135.35 89.2835 cv
135.35 89.2835 li
135.395 93.8187 mo
135.369 94.578 135.326 95.3329 135.266 96.0831 cv
135.249 96.2897 135.068 96.4439 134.862 96.4275 cv
134.655 96.4111 134.501 96.2302 134.517 96.0235 cv
134.576 95.2844 134.619 94.5408 134.645 93.7928 cv
134.652 93.5856 134.826 93.4234 135.033 93.4306 cv
135.24 93.4378 135.402 93.6116 135.395 93.8187 cv
135.035 98.3395 mo
134.94 99.0928 134.829 99.8408 134.702 100.583 cv
134.666 100.788 134.472 100.925 134.268 100.89 cv
134.064 100.855 133.927 100.66 133.962 100.456 cv
134.087 99.7248 134.197 98.9881 134.29 98.2461 cv
134.316 98.0404 134.503 97.8946 134.709 97.9204 cv
134.915 97.9462 135.06 98.1338 135.035 98.3395 cv
134.267 102.81 mo
134.104 103.551 133.925 104.286 133.731 105.014 cv
133.677 105.214 133.471 105.333 133.271 105.279 cv
133.071 105.226 132.952 105.02 133.005 104.82 cv
133.197 104.103 133.373 103.379 133.533 102.649 cv
133.578 102.446 133.778 102.318 133.98 102.363 cv
134.183 102.407 134.311 102.607 134.267 102.81 cv
134.267 102.81 li
133.094 107.191 mo
132.864 107.916 132.618 108.633 132.357 109.343 cv
132.285 109.538 132.07 109.637 131.875 109.565 cv
131.68 109.494 131.581 109.278 131.653 109.083 cv
131.91 108.384 132.152 107.678 132.379 106.964 cv
132.441 106.767 132.652 106.657 132.85 106.72 cv
133.048 106.783 133.157 106.994 133.094 107.191 cv
131.522 111.458 mo
131.227 112.157 130.917 112.849 130.592 113.532 cv
130.503 113.719 130.279 113.798 130.091 113.709 cv
129.904 113.62 129.825 113.396 129.914 113.209 cv
130.234 112.536 130.54 111.855 130.83 111.166 cv
130.911 110.975 131.131 110.886 131.322 110.966 cv
131.513 111.047 131.603 111.267 131.522 111.458 cv
129.568 115.56 mo
129.211 116.229 128.839 116.889 128.453 117.539 cv
128.347 117.718 128.117 117.776 127.939 117.67 cv
127.761 117.565 127.702 117.334 127.808 117.156 cv
128.188 116.515 128.554 115.866 128.906 115.207 cv
129.003 115.024 129.231 114.955 129.414 115.052 cv
129.596 115.15 129.666 115.377 129.568 115.56 cv
127.25 119.465 mo
126.834 120.098 126.404 120.721 125.961 121.334 cv
125.839 121.502 125.605 121.54 125.437 121.418 cv
125.269 121.297 125.231 121.062 125.353 120.894 cv
125.789 120.29 126.213 119.677 126.622 119.053 cv
126.736 118.88 126.969 118.832 127.142 118.945 cv
127.315 119.059 127.364 119.292 127.25 119.465 cv
124.589 123.142 mo
124.118 123.735 123.634 124.316 123.137 124.886 cv
123.001 125.043 122.763 125.059 122.607 124.923 cv
122.451 124.786 122.434 124.549 122.571 124.393 cv
123.06 123.831 123.537 123.259 124.001 122.675 cv
124.13 122.513 124.366 122.486 124.529 122.615 cv
124.691 122.744 124.718 122.98 124.589 123.142 cv
121.608 126.563 mo
121.086 127.11 120.551 127.645 120.005 128.168 cv
119.855 128.311 119.618 128.306 119.474 128.156 cv
119.331 128.007 119.336 127.769 119.486 127.626 cv
120.024 127.11 120.55 126.583 121.065 126.044 cv
121.208 125.894 121.445 125.889 121.595 126.032 cv
121.745 126.175 121.751 126.413 121.608 126.563 cv
121.608 126.563 li
118.332 129.699 mo
117.763 130.196 117.183 130.681 116.592 131.153 cv
116.43 131.282 116.194 131.255 116.064 131.093 cv
115.935 130.931 115.962 130.695 116.124 130.566 cv
116.706 130.101 117.277 129.624 117.838 129.134 cv
117.994 128.997 118.231 129.013 118.367 129.169 cv
118.504 129.325 118.488 129.562 118.332 129.699 cv
114.788 132.526 mo
114.178 132.97 113.556 133.4 112.925 133.816 cv
112.752 133.93 112.519 133.883 112.405 133.709 cv
112.291 133.536 112.339 133.304 112.512 133.189 cv
113.134 132.779 113.746 132.356 114.347 131.919 cv
114.515 131.797 114.75 131.834 114.872 132.002 cv
114.993 132.169 114.956 132.404 114.788 132.526 cv
111.006 135.02 mo
110.358 135.407 109.701 135.779 109.035 136.136 cv
108.852 136.234 108.624 136.165 108.526 135.983 cv
108.428 135.8 108.497 135.572 108.68 135.474 cv
109.336 135.122 109.983 134.756 110.621 134.376 cv
110.799 134.269 111.03 134.328 111.136 134.506 cv
111.242 134.684 111.184 134.914 111.006 135.02 cv
107.015 137.16 mo
106.336 137.486 105.648 137.797 104.952 138.092 cv
104.761 138.173 104.541 138.084 104.46 137.893 cv
104.379 137.702 104.468 137.482 104.659 137.401 cv
105.344 137.11 106.022 136.804 106.691 136.483 cv
106.878 136.394 107.102 136.473 107.192 136.66 cv
107.281 136.847 107.202 137.071 107.015 137.16 cv
102.85 138.928 mo
102.143 139.191 101.428 139.438 100.706 139.669 cv
100.508 139.733 100.297 139.624 100.234 139.426 cv
100.171 139.229 100.279 139.018 100.477 138.954 cv
101.188 138.727 101.892 138.483 102.588 138.224 cv
102.783 138.152 102.999 138.251 103.071 138.445 cv
103.143 138.64 103.044 138.856 102.85 138.928 cv
98.5301 140.312 mo
97.8023 140.509 97.068 140.689 96.3274 140.854 cv
96.1251 140.899 95.9246 140.771 95.8796 140.569 cv
95.8347 140.366 95.9623 140.166 96.1647 140.121 cv
96.894 139.959 97.6173 139.781 98.3341 139.587 cv
98.5341 139.533 98.7403 139.651 98.7944 139.851 cv
98.8485 140.051 98.7303 140.258 98.5301 140.312 cv
94.1024 141.295 mo
93.3603 141.425 92.6127 141.538 91.8597 141.634 cv
91.6541 141.661 91.466 141.515 91.4397 141.31 cv
91.4133 141.104 91.5587 140.916 91.7643 140.89 cv
92.5059 140.795 93.2424 140.683 93.9733 140.555 cv
94.1775 140.52 94.3719 140.656 94.4077 140.861 cv
94.4433 141.065 94.3066 141.259 94.1024 141.295 cv
89.6041 141.872 mo
88.8539 141.933 88.0991 141.979 87.34 142.007 cv
87.1328 142.015 86.9585 141.853 86.9508 141.646 cv
86.9431 141.439 87.1048 141.264 87.312 141.257 cv
88.0598 141.229 88.8035 141.184 89.5424 141.123 cv
89.749 141.106 89.9303 141.26 89.9473 141.467 cv
89.9644 141.673 89.8107 141.855 89.6041 141.872 cv
85.0715 142.041 mo
84.3118 142.035 83.556 142.013 82.8046 141.974 cv
82.5976 141.963 82.4385 141.787 82.4493 141.58 cv
82.4601 141.373 82.6366 141.213 82.8437 141.224 cv
83.5839 141.263 84.3284 141.285 85.077 141.29 cv
85.2843 141.292 85.4512 141.461 85.4496 141.668 cv
85.4481 141.876 85.2789 142.043 85.0715 142.041 cv
80.5428 141.805 mo
79.7872 141.732 79.0363 141.641 78.2908 141.534 cv
78.0856 141.505 77.9431 141.315 77.9725 141.11 cv
78.0019 140.904 78.192 140.762 78.3973 140.791 cv
79.1316 140.897 79.8711 140.986 80.6156 141.058 cv
80.8219 141.078 80.9728 141.262 80.9528 141.468 cv
80.9328 141.674 80.7492 141.825 80.5428 141.805 cv
76.0533 141.162 mo
75.3079 141.02 74.5682 140.862 73.8349 140.687 cv
73.6332 140.64 73.5087 140.437 73.5566 140.235 cv
73.6045 140.034 73.8069 139.909 74.0086 139.957 cv
74.7308 140.129 75.4593 140.285 76.1934 140.424 cv
76.3971 140.463 76.5308 140.659 76.4921 140.863 cv
76.4534 141.067 76.2569 141.2 76.0533 141.162 cv
71.6404 140.112 mo
70.9116 139.903 70.1895 139.678 69.4746 139.437 cv
69.2781 139.371 69.1725 139.158 69.2387 138.962 cv
69.3049 138.765 69.5178 138.66 69.7142 138.726 cv
70.4183 138.963 71.1295 139.185 71.8473 139.391 cv
72.0466 139.448 72.1619 139.656 72.1048 139.855 cv
72.0476 140.054 71.8398 140.169 71.6405 140.112 cv
71.6404 140.112 li
67.3367 138.662 mo
66.629 138.387 65.929 138.096 65.2372 137.79 cv
65.0478 137.706 64.9621 137.484 65.0459 137.295 cv
65.1298 137.105 65.3515 137.02 65.5411 137.104 cv
66.2223 137.405 66.9117 137.691 67.6087 137.962 cv
67.802 138.038 67.8977 138.255 67.8226 138.448 cv
67.7474 138.641 67.53 138.737 67.3367 138.662 cv
63.1806 136.823 mo
62.5017 136.485 61.8317 136.132 61.1708 135.764 cv
60.9896 135.663 60.9245 135.435 61.0253 135.253 cv
61.1261 135.072 61.3547 135.007 61.5358 135.108 cv
62.1868 135.47 62.8467 135.818 63.5155 136.151 cv
63.7009 136.244 63.7765 136.469 63.684 136.655 cv
63.5915 136.84 63.3662 136.916 63.1806 136.823 cv
59.2117 134.615 mo
58.5671 134.216 57.9322 133.804 57.3074 133.378 cv
57.1362 133.261 57.0921 133.027 57.209 132.856 cv
57.3258 132.685 57.5593 132.641 57.7306 132.758 cv
58.346 133.177 58.9713 133.584 59.6062 133.976 cv
59.7827 134.085 59.8373 134.316 59.7283 134.492 cv
59.6194 134.669 59.3881 134.723 59.2117 134.615 cv
55.4616 132.056 mo
54.8562 131.602 54.2615 131.134 53.6779 130.653 cv
53.5179 130.521 53.495 130.284 53.6269 130.124 cv
53.7588 129.964 53.9953 129.941 54.1553 130.073 cv
54.7302 130.547 55.316 131.008 55.9123 131.456 cv
56.0782 131.58 56.1116 131.815 55.9871 131.981 cv
55.8627 132.147 55.6275 132.181 55.4616 132.056 cv
51.9597 129.17 mo
51.3983 128.664 50.8484 128.144 50.3105 127.613 cv
50.1631 127.467 50.1617 127.229 50.3074 127.082 cv
50.4532 126.934 50.6908 126.933 50.8382 127.079 cv
51.3681 127.602 51.9098 128.114 52.4628 128.613 cv
52.6166 128.752 52.6288 128.99 52.4899 129.143 cv
52.3509 129.297 52.1135 129.309 51.9597 129.17 cv
48.7336 125.982 mo
48.2206 125.427 47.72 124.861 47.2322 124.283 cv
47.0985 124.124 47.1185 123.887 47.2768 123.754 cv
47.4353 123.62 47.6721 123.64 47.8059 123.799 cv
48.2863 124.368 48.7795 124.926 49.2849 125.473 cv
49.4256 125.625 49.4164 125.862 49.2641 126.003 cv
49.1119 126.144 48.8744 126.134 48.7337 125.982 cv
48.7336 125.982 li
45.8092 122.518 mo
45.3487 121.919 44.9015 121.31 44.4678 120.691 cv
44.3489 120.521 44.3902 120.287 44.5601 120.168 cv
44.7299 120.049 44.964 120.09 45.0829 120.26 cv
45.51 120.87 45.9506 121.47 46.4043 122.06 cv
46.5307 122.224 46.5 122.46 46.3356 122.586 cv
46.1714 122.713 45.9357 122.682 45.8092 122.518 cv
43.2107 118.805 mo
42.8065 118.168 42.4163 117.521 42.0405 116.865 cv
41.9375 116.685 41.9999 116.456 42.1798 116.353 cv
42.3597 116.25 42.589 116.312 42.692 116.492 cv
43.0621 117.139 43.4465 117.775 43.8446 118.403 cv
43.9557 118.578 43.9039 118.81 43.7287 118.921 cv
43.5537 119.032 43.3218 118.98 43.2107 118.805 cv
40.9599 114.875 mo
40.6156 114.205 40.2858 113.526 39.9712 112.838 cv
39.885 112.65 39.9679 112.427 40.1564 112.341 cv
40.3449 112.254 40.5677 112.337 40.6539 112.526 cv
40.9637 113.203 41.2885 113.872 41.6277 114.532 cv
41.7224 114.716 41.6498 114.943 41.4654 115.037 cv
41.2809 115.132 41.0547 115.059 40.9599 114.875 cv
39.0765 110.759 mo
38.794 110.06 38.527 109.352 38.2758 108.637 cv
38.207 108.441 38.3099 108.227 38.5055 108.158 cv
38.701 108.09 38.9154 108.192 38.9841 108.388 cv
39.2315 109.092 39.4946 109.789 39.7727 110.478 cv
39.8504 110.671 39.7574 110.889 39.5651 110.967 cv
39.3728 111.045 39.1542 110.952 39.0765 110.759 cv
37.5729 106.48 mo
37.3556 105.758 37.1544 105.029 36.9694 104.293 cv
36.9187 104.092 37.0408 103.888 37.2418 103.838 cv
37.4428 103.787 37.6468 103.909 37.6974 104.11 cv
37.8796 104.835 38.0778 105.552 38.2918 106.264 cv
38.3515 106.462 38.239 106.672 38.0405 106.731 cv
37.842 106.791 37.6325 106.678 37.5729 106.48 cv
36.4664 102.081 mo
36.3161 101.343 36.1821 100.599 36.0648 99.8488 cv
36.0328 99.6441 36.1729 99.452 36.3777 99.42 cv
36.5824 99.388 36.7745 99.528 36.8066 99.7329 cv
36.9221 100.471 37.0541 101.204 37.2021 101.932 cv
37.2433 102.135 37.1122 102.333 36.909 102.374 cv
36.7059 102.416 36.5077 102.284 36.4664 102.081 cv
35.7652 97.6005 mo
35.6827 96.8523 35.6167 96.0991 35.5676 95.3411 cv
35.5542 95.1343 35.711 94.9557 35.9179 94.9424 cv
36.1247 94.9288 36.3033 95.0858 36.3167 95.2926 cv
36.3652 96.0392 36.4302 96.7812 36.5114 97.5183 cv
36.5342 97.7244 36.3856 97.9098 36.1794 97.9326 cv
35.9734 97.9552 35.7879 97.8067 35.7652 97.6005 cv
35.4717 93.0749 mo
35.4649 92.7374 35.4616 92.3992 35.4617 92.0601 cv
35.4617 91.3002 35.4785 90.5443 35.5121 89.7927 cv
35.5213 89.5856 35.6968 89.4252 35.9039 89.4344 cv
36.111 89.4437 36.2713 89.6191 36.2622 89.8261 cv
36.2291 90.5666 36.2123 91.3113 36.2124 92.0601 cv
36.2124 92.3941 36.2157 92.7274 36.2223 93.06 cv
36.2265 93.2672 36.0618 93.4386 35.8545 93.4426 cv
35.6472 93.4468 35.4758 93.2821 35.4717 93.0749 cv
1 /0 /CSD get_res sepcs
1 sep
f
115.86 104.53 mo
125.61 87.41 118.34 58.03 99.216 52.88 cv
87.632 49.76 71.699 55.53 62.436 64.01 cv
56.503 69.44 53.306 75.98 50.659 83.55 cv
49.232 87.62 47.965 91.99 47.884 96.24 cv
47.608 110.65 60.997 123.63 74.784 126.504 cv
91.916 130.074 109.66 118.04 115.86 104.53 cv
.0758679 .0339361 .00259403 0 cmyk
ef
115.86 104.53 mo
115.534 104.344 li
118.421 99.2765 119.804 93.0963 119.804 86.791 cv
119.804 79.4385 117.923 71.9202 114.392 65.8129 cv
110.86 59.7031 105.694 55.0132 99.1184 53.2425 cv
96.9806 52.6666 94.6851 52.3972 92.3052 52.3973 cv
82.0057 52.3909 70.134 57.4639 62.6895 64.2869 cv
56.8205 69.6591 53.6531 76.1266 51.0133 83.6739 cv
49.5903 87.7302 48.3379 92.0669 48.2593 96.2472 cv
48.2565 96.391 48.2552 96.5348 48.2552 96.6783 cv
48.254 103.676 51.5174 110.337 56.4873 115.605 cv
61.4548 120.872 68.1225 124.733 74.8606 126.137 cv
76.9078 126.563 78.9643 126.764 81.0095 126.764 cv
95.8607 126.777 110.143 116.112 115.519 104.373 cv
115.534 104.344 li
115.86 104.53 li
116.201 104.687 li
110.678 116.698 96.223 127.502 81.0095 127.515 cv
78.9151 127.515 76.807 127.309 74.7074 126.871 cv
67.7983 125.43 61.0141 121.495 55.9412 116.12 cv
50.8707 110.745 47.5056 103.915 47.5044 96.6783 cv
47.5044 96.53 47.5059 96.3814 47.5087 96.2328 cv
47.5921 91.9131 48.8737 87.5099 50.3047 83.4258 cv
52.9588 75.8335 56.1854 69.2209 62.1825 63.7331 cv
69.786 56.78 81.764 51.6529 92.3052 51.6466 cv
94.7417 51.6466 97.1021 51.922 99.3136 52.5176 cv
106.123 54.3514 111.439 59.2008 115.042 65.4372 cv
118.647 71.6761 120.554 79.3111 120.554 86.791 cv
120.554 93.205 119.151 99.5083 116.186 104.716 cv
115.86 104.53 li
116.201 104.687 li
115.86 104.53 li
1 /0 /CSD get_res sepcs
1 sep
f
39.238 42.45 mo
37.986 42.45 36.97 41.44 36.97 40.19 cv
36.97 38.9299 37.986 37.92 39.238 37.92 cv
40.491 37.92 41.506 38.9299 41.506 40.19 cv
41.506 41.44 40.491 42.45 39.238 42.45 cv
.750271 .679713 .66479 .901945 cmyk
f
36.97 40.19 mo
36.97 38.93 37.986 37.92 39.238 37.92 cv
40.491 37.92 41.506 38.93 41.506 40.19 cv
41.506 41.44 40.491 42.45 39.238 42.45 cv
37.986 42.45 36.97 41.44 36.97 40.19 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
92.208 90.64 mo
84.026 80.77 li
75.843 90.64 li
92.208 90.64 li
cp
0 1 1 0 cmyk
ef
92.208 90.64 mo
84.026 80.77 li
75.843 90.64 li
92.208 90.64 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
205.59 152.273 mo
197.41 142.399 li
189.23 152.273 li
205.59 152.273 li
cp
0 1 1 0 cmyk
ef
205.59 152.273 mo
197.41 142.399 li
189.23 152.273 li
205.59 152.273 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H)
%%Title: (JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -145 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28762 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
55 <001C60D8A8C9B7A73DB9D5181D8B2E9B717FF670137DD5C74B01C45437E1
9CDD270110C87A6C8B51852CD7A5F8C89E9502C8B78539C3E37CD4EAF21FA206
78904092A16ACC99DA5D8612817D5237BAA559BC26D5CB80594A97474365F2CC
4092A60D10D10ABB1C2B393EAF135270F9C8447300CA5BF6342B6B35F09D2231
D53265F4E3> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H /Identity-H 0 [/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
94.025 103.1 mo
(\0007)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
94.025 103.1 mo
(\0007) false chp
.34429 lw
@
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H 1 GetGlyphDirectory
68 <001C60D8A8C9B7A73DB98653E05A9FC5B5EAD8DF8918156B7D8947B72958
6A5D71329F6C61A9A77AF57C287F000D704E2B1B8CE249B18DAE67C644BB1230
47F50A6EBCD98C07AA66C4DD0A76B159CD29A711636C3E8E96322D91698FC417
EE3AF0100BFDDAD67B2B21BC41C61402F09AAFDEE7C5AD30CCB232A8E6E155DC
86AE132158E832A6F89E6610BEA8A0F39564C0D8550E916722019256CE98C6F8
5F19B9209778C83C794FC8FCC2A636A7723F212BA81A84D9872C4C2FD1780D4C
0FEF29C2CA6714F970CE098037D79A9F77359866B81A5DE84625B772E4DD2669
7EBD5449FC251873E5600E23E1D84B36167C98937F9631E4A9D2B4C07FC06858
BF43> |
!
end
end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
100.025 103.1 mo
(\000D)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
100.025 103.1 mo
(\000D) false chp
@
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H 1 GetGlyphDirectory
85 <001C60D8A8C9B7A73DB97983BCC759D7FB3A4FDCE0D7570A90897AA8C8EA
8ECEF21D0ADDAE48E4C2C151543F8FE94C2CFE5334E7C112EDD213EE7FCABA02
F4CD205203DB96FAD5A454F9150CF55CB167547B51DFFAB62E26249B4B6315E1
52E19443D6D50F823CFDA3D9AAD4D3303BA4D9AAE7C7FA1FE29108CE854B2CFB
5B30C4109037D5F7B223F54042062F52C2C78BC21D26FA34466A968737A83F11
F03801922C455FAFBE38BA73E0C12E73ECA1C41E6D6C81> |
!
end
end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
106.025 103.1 mo
(\000U)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
106.025 103.1 mo
(\000U) false chp
@
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H 1 GetGlyphDirectory
74 <001C60D8A8C9B7A73DB91F11B451E7DBFA46ECBE25C9942EBDB0619EB037
A650021A696093BB4137719B4EDEFA299F43C49829D944591403F963EA7515F8
87222C06EA6926A6379751A80C74883E86856F14223DC365C156F55BCEDFE8D8
CC6C68F3D3797BD1D6D3F93B526AF593A416C1A3F5183FB8A5FB78F06619A4B4
C310395B1BE81023AC22BE829D19C71FCFB5CFA31AFAC80DF6A8632A7D75DA7A
C37D0058B187AF0E365BFECD5A314CE89421CBDB46C47AB7E88E11EA2CA3F1CD
A3D9B6C9BEC6DDDA2358204131735ECF0626CD71730DEDC2DB208A602D4DEC90
88B6423CF65F463006D9CDF6257162A3513E1EF96494B564E5081D6349C20AF1
AE4A55AAB204DAC927519DD8A1AB037CF6E7F91BBD10C20EB433E484F5E14702
A6052942B8AC20C3C3A1C86B1A992A5F5E5F8F98B2752C99D239623E22948613
4F4C0417BA7CBE5731987E3F5DF197B79DED3913E2991264B0413422BB809CE3
D8CED7BC2CCA7E12BC05DAFFCF603904D0690523A4D8C8BAC84FF5F9B0D1CAFE
558FF91780D5087C72C5E5889F3A600CC7DC6A230DB62D5DD9733A012092355B
4DABE3C092529201A3F8A4DAB27E249F07> |
!
end
end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
112.025 103.1 mo
(\000J)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
112.025 103.1 mo
(\000J) false chp
@
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H 1 GetGlyphDirectory
72 <001C60D8A8C9B7A73DB937B4101DBBF46DCDCD34C66331F9C4BC9617541C
58225F0813F84C9B99CE106C877AC69B6618F22D5116137A9BBCC8BBD2B6E99F
1515F40D5047C1870B45E96B1FB58B60D6847A662BC240FFE5567D9F452FAC8C
3A6A6C8EF10951B46DD67811A39E791E248501B427AEB3F7D65FADC7A32C27A8
280DAD3EE5A5DC8377> |
!
end
end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
118.025 103.1 mo
(\000H)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
118.025 103.1 mo
(\000H) false chp
@
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H 1 GetGlyphDirectory
87 <001C60D8A8C9B7A73DB95A84ADEFC27CA3118991A6B06AA4BCC9E401A199
AD2ED0215A3F452FFBD87E172E65C43C3D01B21353688DD3BB2DFBBF62609414
A723D4BE0F998947300EBE6F71534F58F1FD8E961B2033B7C6342D1571C25D27
0CD36FEE40498320DC6EEF544393F5BA4E9A1B022D> |
!
end
end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
124.025 103.1 mo
(\000W)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
124.025 103.1 mo
(\000W) false chp
@
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H 1 GetGlyphDirectory
3 <001C60D8A8C9B7A73D40> |
!
end
end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
130.025 103.1 mo
(\000\003)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
130.025 103.1 mo
(\000\003) false chp
@
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H 1 GetGlyphDirectory
44 <001C60D8A8C9B7A73DB9696D477FC5C77CC13F785D0DEFFCFE399F815467
2C738C7542738E124DFEDA4F33708349FE4D7ECBEDDDE92AFC81C7A51B45AEEC
CE4AEBB160C3CBB2056F1DB3B4BB9EAEADC6349A0E672BA304F2323994F5EFB4
AD37BAA9> |
!
end
end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
136.025 103.1 mo
(\000,)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
136.025 103.1 mo
(\000,) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
123.65 159.975 mo
(\0007)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
123.65 159.975 mo
(\0007) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
129.65 159.975 mo
(\000D)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
129.65 159.975 mo
(\000D) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
135.65 159.975 mo
(\000U)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
135.65 159.975 mo
(\000U) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
141.65 159.975 mo
(\000J)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
141.65 159.975 mo
(\000J) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
147.65 159.975 mo
(\000H)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
147.65 159.975 mo
(\000H) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
153.65 159.975 mo
(\000W)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
153.65 159.975 mo
(\000W) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
159.65 159.975 mo
(\000\003)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
159.65 159.975 mo
(\000\003) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
165.65 159.975 mo
(\000,)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
165.65 159.975 mo
(\000,) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
172.385 159.975 mo
(\000,)sh
174.597 152.02 mo
174.597 151.848 li
174.775 151.849 174.93 151.879 175.048 151.992 cv
175.049 151.993 li
175.153 152.099 175.194 152.245 175.193 152.397 cv
175.193 159.128 li
175.194 159.28 175.154 159.427 175.049 159.532 cv
174.93 159.646 174.774 159.675 174.597 159.676 cv
173.687 159.676 li
173.687 159.787 li
173.515 159.787 li
173.515 159.615 li
177.108 159.615 li
177.108 159.504 li
177.28 159.504 li
177.28 159.676 li
176.198 159.676 li
176.045 159.677 175.898 159.637 175.783 159.544 cv
175.892 159.41 li
175.785 159.545 li
175.658 159.447 175.6 159.287 175.602 159.128 cv
175.602 152.397 li
175.6 152.238 175.658 152.079 175.784 151.98 cv
175.898 151.888 176.044 151.847 176.198 151.848 cv
177.108 151.848 li
177.108 151.738 li
177.28 151.738 li
177.28 151.91 li
173.687 151.91 li
173.687 152.02 li
173.515 152.02 li
173.515 151.848 li
174.597 151.848 li
174.597 152.02 li
174.597 152.192 li
173.515 152.192 li
173.393 152.142 li
173.343 152.02 li
173.343 151.738 li
173.393 151.616 li
173.515 151.566 li
177.28 151.566 li
177.402 151.616 li
177.453 151.738 li
177.453 152.02 li
177.402 152.142 li
177.28 152.192 li
176.198 152.192 li
176.1 152.193 176.041 152.215 175.999 152.249 cv
175.968 152.276 175.949 152.305 175.946 152.397 cv
175.946 159.128 li
175.949 159.22 175.968 159.249 175.999 159.275 cv
176 159.277 li
176.041 159.309 176.099 159.331 176.198 159.332 cv
177.28 159.332 li
177.402 159.383 li
177.453 159.504 li
177.453 159.787 li
177.402 159.908 li
177.28 159.959 li
173.515 159.959 li
173.393 159.908 li
173.343 159.787 li
173.343 159.504 li
173.393 159.383 li
173.515 159.332 li
174.597 159.332 li
174.734 159.333 174.797 159.3 174.805 159.288 cv
174.825 159.269 174.848 159.227 174.849 159.128 cv
174.849 152.397 li
174.848 152.299 174.825 152.256 174.804 152.235 cv
174.927 152.114 li
174.806 152.237 li
174.797 152.224 174.733 152.191 174.597 152.192 cv
174.597 152.02 li
f
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H 1 GetGlyphDirectory
36 <001C60D8A8C9B7A73DB9D2D67B03BABA16DE71088E91FDA0365C2DC5F0B4
E238C107979A1BB6C942939C3841566B30D37A08137C1E84B536C3470D5FC886
B167970ABECCA7AC50839057124E257C720FD39309BA1A816166D7E735D90459
C18987BA30E000006CD065F37B91215EF51643DE4E333253E6C5E54C9253984B> |
!
end
end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
61.025 35.2 mo
(\000$)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
61.025 35.2 mo
(\000$) false chp
.34357 lw
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
67.05 35.2 mo
(\000U)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
67.05 35.2 mo
(\000U) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
73.075 35.2 mo
(\000H)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
73.075 35.2 mo
(\000H) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
79.1 35.2 mo
(\000D)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
79.1 35.2 mo
(\000D) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
85.125 35.2 mo
(\000\003)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
85.125 35.2 mo
(\000\003) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
91.15 35.2 mo
(\000,)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
91.15 35.2 mo
(\000,) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
227.65 193.05 mo
(\000$)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
227.65 193.05 mo
(\000$) false chp
.34429 lw
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
233.675 193.05 mo
(\000U)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
233.675 193.05 mo
(\000U) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
239.7 193.05 mo
(\000H)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
239.7 193.05 mo
(\000H) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
245.725 193.05 mo
(\000D)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
245.725 193.05 mo
(\000D) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
251.75 193.05 mo
(\000\003)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
251.75 193.05 mo
(\000\003) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
257.775 193.05 mo
(\000,)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
257.775 193.05 mo
(\000,) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
263.8 193.05 mo
(\000,)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
263.8 193.05 mo
(\000,) false chp
@
107.27 90.79 mo
106.02 90.79 105 89.77 105 88.52 cv
105 87.27 106.02 86.25 107.27 86.25 cv
108.52 86.25 109.54 87.27 109.54 88.52 cv
109.54 89.77 108.52 90.79 107.27 90.79 cv
.761074 .678981 .648341 .889342 cmyk
f
.75075 lw
105 88.52 mo
105 87.27 106.02 86.25 107.27 86.25 cv
108.52 86.25 109.54 87.27 109.54 88.52 cv
109.54 89.77 108.52 90.79 107.27 90.79 cv
106.02 90.79 105 89.77 105 88.52 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
139.8 143.016 mo
139.425 143.016 li
139.425 141.555 140.613 140.374 142.07 140.374 cv
143.527 140.374 144.715 141.555 144.715 143.016 cv
144.715 144.478 143.527 145.659 142.07 145.659 cv
140.613 145.659 139.425 144.478 139.425 143.016 cv
139.8 143.016 li
140.175 143.016 li
140.177 144.06 141.027 144.907 142.07 144.909 cv
143.113 144.907 143.963 144.06 143.965 143.016 cv
143.963 141.973 143.113 141.126 142.07 141.124 cv
141.027 141.126 140.177 141.973 140.175 143.016 cv
139.8 143.016 li
f
106.14 36.93 mo
104.88 36.93 103.87 35.91 103.87 34.66 cv
103.87 33.41 104.88 32.39 106.14 32.39 cv
107.39 32.39 108.4 33.41 108.4 34.66 cv
108.4 35.91 107.39 36.93 106.14 36.93 cv
.750271 .679713 .66479 .901945 cmyk
f
103.87 34.66 mo
103.87 33.41 104.88 32.39 106.14 32.39 cv
107.39 32.39 108.4 33.41 108.4 34.66 cv
108.4 35.91 107.39 36.93 106.14 36.93 cv
104.88 36.93 103.87 35.91 103.87 34.66 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
163.96 74.34 mo
162.71 74.34 161.69 73.33 161.69 72.08 cv
161.69 70.82 162.71 69.81 163.96 69.81 cv
165.21 69.81 166.23 70.82 166.23 72.08 cv
166.23 73.33 165.21 74.34 163.96 74.34 cv
.750271 .679713 .66479 .901945 cmyk
f
161.69 72.08 mo
161.69 70.82 162.71 69.81 163.96 69.81 cv
165.21 69.81 166.23 70.82 166.23 72.08 cv
166.23 73.33 165.21 74.34 163.96 74.34 cv
162.71 74.34 161.69 73.33 161.69 72.08 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
213.11 123.491 mo
212.735 123.491 li
212.737 122.033 213.913 120.851 215.38 120.849 cv
216.837 120.849 218.025 122.03 218.025 123.491 cv
218.025 124.952 216.837 126.134 215.38 126.134 cv
213.913 126.132 212.737 124.95 212.735 123.491 cv
213.11 123.491 li
213.485 123.491 li
213.486 124.538 214.327 125.383 215.38 125.384 cv
216.423 125.382 217.273 124.536 217.275 123.491 cv
217.273 122.448 216.423 121.601 215.38 121.599 cv
214.327 121.6 213.486 122.445 213.485 123.491 cv
213.11 123.491 li
f
87.427 101.56 mo
86.175 101.56 85.159 100.54 85.159 99.29 cv
85.159 98.0399 86.175 97.02 87.427 97.02 cv
88.68 97.02 89.695 98.0399 89.695 99.29 cv
89.695 100.54 88.68 101.56 87.427 101.56 cv
.761074 .678981 .648341 .889342 cmyk
f
85.159 99.29 mo
85.159 98.04 86.175 97.02 87.427 97.02 cv
88.68 97.02 89.695 98.04 89.695 99.29 cv
89.695 100.54 88.68 101.56 87.427 101.56 cv
86.175 101.56 85.159 100.54 85.159 99.29 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
213.11 123.491 mo
212.735 123.491 li
212.737 122.033 213.913 120.851 215.38 120.849 cv
216.837 120.849 218.025 122.03 218.025 123.491 cv
218.025 124.952 216.837 126.134 215.38 126.134 cv
213.913 126.132 212.737 124.95 212.735 123.491 cv
213.11 123.491 li
213.485 123.491 li
213.486 124.538 214.327 125.383 215.38 125.384 cv
216.423 125.382 217.273 124.536 217.275 123.491 cv
217.273 122.448 216.423 121.601 215.38 121.599 cv
214.327 121.6 213.486 122.445 213.485 123.491 cv
213.11 123.491 li
f
266.79 177.174 mo
265.54 177.174 264.52 176.159 264.52 174.906 cv
264.52 173.654 265.54 172.638 266.79 172.638 cv
268.04 172.638 269.06 173.654 269.06 174.906 cv
269.06 176.159 268.04 177.174 266.79 177.174 cv
.750271 .679713 .66479 .901945 cmyk
f
264.52 174.906 mo
264.52 173.654 265.54 172.638 266.79 172.638 cv
268.04 172.638 269.06 173.654 269.06 174.906 cv
269.06 176.159 268.04 177.174 266.79 177.174 cv
265.54 177.174 264.52 176.159 264.52 174.906 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
266.01 74.34 mo
264.76 74.34 263.74 73.33 263.74 72.08 cv
263.74 70.82 264.76 69.81 266.01 69.81 cv
267.26 69.81 268.28 70.82 268.28 72.08 cv
268.28 73.33 267.26 74.34 266.01 74.34 cv
.750271 .679713 .66479 .901945 cmyk
f
263.74 72.08 mo
263.74 70.82 264.76 69.81 266.01 69.81 cv
267.26 69.81 268.28 70.82 268.28 72.08 cv
268.28 73.33 267.26 74.34 266.01 74.34 cv
264.76 74.34 263.74 73.33 263.74 72.08 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
213.11 123.491 mo
212.735 123.491 li
212.737 122.033 213.913 120.851 215.38 120.849 cv
216.837 120.849 218.025 122.03 218.025 123.491 cv
218.025 124.952 216.837 126.134 215.38 126.134 cv
213.913 126.132 212.737 124.95 212.735 123.491 cv
213.11 123.491 li
213.485 123.491 li
213.486 124.538 214.327 125.383 215.38 125.384 cv
216.423 125.382 217.273 124.536 217.275 123.491 cv
217.273 122.448 216.423 121.601 215.38 121.599 cv
214.327 121.6 213.486 122.445 213.485 123.491 cv
213.11 123.491 li
f
256.37 131.037 mo
255.12 131.037 254.1 130.022 254.1 128.769 cv
254.1 127.517 255.12 126.502 256.37 126.502 cv
257.62 126.502 258.64 127.517 258.64 128.769 cv
258.64 130.022 257.62 131.037 256.37 131.037 cv
.750271 .679713 .66479 .901945 cmyk
f
254.1 128.769 mo
254.1 127.517 255.12 126.502 256.37 126.502 cv
257.62 126.502 258.64 127.517 258.64 128.769 cv
258.64 130.022 257.62 131.037 256.37 131.037 cv
255.12 131.037 254.1 130.022 254.1 128.769 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
307.79 182.452 mo
306.53 182.452 305.52 181.437 305.52 180.184 cv
305.52 178.932 306.53 177.917 307.79 177.917 cv
309.04 177.917 310.05 178.932 310.05 180.184 cv
310.05 181.437 309.04 182.452 307.79 182.452 cv
.750271 .679713 .66479 .901945 cmyk
f
305.52 180.184 mo
305.52 178.932 306.53 177.917 307.79 177.917 cv
309.04 177.917 310.05 178.932 310.05 180.184 cv
310.05 181.437 309.04 182.452 307.79 182.452 cv
306.53 182.452 305.52 181.437 305.52 180.184 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
72.12 54.5 mo
70.868 54.5 69.852 53.49 69.852 52.23 cv
69.852 50.98 70.868 49.97 72.12 49.97 cv
73.372 49.97 74.388 50.98 74.388 52.23 cv
74.388 53.49 73.372 54.5 72.12 54.5 cv
.750271 .679713 .66479 .901945 cmyk
f
69.852 52.23 mo
69.852 50.98 70.868 49.97 72.12 49.97 cv
73.372 49.97 74.388 50.98 74.388 52.23 cv
74.388 53.49 73.372 54.5 72.12 54.5 cv
70.868 54.5 69.852 53.49 69.852 52.23 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
121.44 113.46 mo
120.19 113.46 119.18 112.45 119.18 111.19 cv
119.18 109.94 120.19 108.93 121.44 108.93 cv
122.7 108.93 123.71 109.94 123.71 111.19 cv
123.71 112.45 122.7 113.46 121.44 113.46 cv
.750271 .679713 .66479 .901945 cmyk
f
119.18 111.19 mo
119.18 109.94 120.19 108.93 121.44 108.93 cv
122.7 108.93 123.71 109.94 123.71 111.19 cv
123.71 112.45 122.7 113.46 121.44 113.46 cv
120.19 113.46 119.18 112.45 119.18 111.19 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
180.26 163.069 mo
179.01 163.069 177.99 162.053 177.99 160.801 cv
177.99 159.549 179.01 158.533 180.26 158.533 cv
181.51 158.533 182.53 159.549 182.53 160.801 cv
182.53 162.053 181.51 163.069 180.26 163.069 cv
.761074 .678981 .648341 .889342 cmyk
f
177.99 160.801 mo
177.99 159.549 179.01 158.533 180.26 158.533 cv
181.51 158.533 182.53 159.549 182.53 160.801 cv
182.53 162.053 181.51 163.069 180.26 163.069 cv
179.01 163.069 177.99 162.053 177.99 160.801 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
65.742 102.69 mo
64.49 102.69 63.474 101.68 63.474 100.42 cv
63.474 99.17 64.49 98.16 65.742 98.16 cv
66.994 98.16 68.01 99.17 68.01 100.42 cv
68.01 101.68 66.994 102.69 65.742 102.69 cv
.761074 .678981 .648341 .889342 cmyk
f
63.474 100.42 mo
63.474 99.17 64.49 98.16 65.742 98.16 cv
66.994 98.16 68.01 99.17 68.01 100.42 cv
68.01 101.68 66.994 102.69 65.742 102.69 cv
64.49 102.69 63.474 101.68 63.474 100.42 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
139.8 143.016 mo
139.425 143.016 li
139.425 141.555 140.613 140.374 142.07 140.374 cv
143.527 140.374 144.715 141.555 144.715 143.016 cv
144.715 144.478 143.527 145.659 142.07 145.659 cv
140.613 145.659 139.425 144.478 139.425 143.016 cv
139.8 143.016 li
140.175 143.016 li
140.177 144.06 141.027 144.907 142.07 144.909 cv
143.113 144.907 143.963 144.06 143.965 143.016 cv
143.963 141.973 143.113 141.126 142.07 141.124 cv
141.027 141.126 140.177 141.973 140.175 143.016 cv
139.8 143.016 li
f
209.32 64.71 mo
208.06 64.71 207.05 63.69 207.05 62.44 cv
207.05 61.1899 208.06 60.17 209.32 60.17 cv
210.57 60.17 211.58 61.1899 211.58 62.44 cv
211.58 63.69 210.57 64.71 209.32 64.71 cv
.750271 .679713 .66479 .901945 cmyk
f
207.05 62.44 mo
207.05 61.19 208.06 60.17 209.32 60.17 cv
210.57 60.17 211.58 61.19 211.58 62.44 cv
211.58 63.69 210.57 64.71 209.32 64.71 cv
208.06 64.71 207.05 63.69 207.05 62.44 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
283.87 112.61 mo
282.62 112.61 281.6 111.6 281.6 110.34 cv
281.6 109.09 282.62 108.08 283.87 108.08 cv
285.12 108.08 286.14 109.09 286.14 110.34 cv
286.14 111.6 285.12 112.61 283.87 112.61 cv
.750271 .679713 .66479 .901945 cmyk
f
281.6 110.34 mo
281.6 109.09 282.62 108.08 283.87 108.08 cv
285.12 108.08 286.14 109.09 286.14 110.34 cv
286.14 111.6 285.12 112.61 283.87 112.61 cv
282.62 112.61 281.6 111.6 281.6 110.34 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
312.15 167.536 mo
310.89 167.536 309.88 166.521 309.88 165.268 cv
309.88 164.016 310.89 163.001 312.15 163.001 cv
313.4 163.001 314.41 164.016 314.41 165.268 cv
314.41 166.521 313.4 167.536 312.15 167.536 cv
.750271 .679713 .66479 .901945 cmyk
f
309.88 165.268 mo
309.88 164.016 310.89 163.001 312.15 163.001 cv
313.4 163.001 314.41 164.016 314.41 165.268 cv
314.41 166.521 313.4 167.536 312.15 167.536 cv
310.89 167.536 309.88 166.521 309.88 165.268 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
294.36 125.759 mo
293.1 125.759 292.09 124.744 292.09 123.491 cv
292.09 122.239 293.1 121.224 294.36 121.224 cv
295.61 121.224 296.62 122.239 296.62 123.491 cv
296.62 124.744 295.61 125.759 294.36 125.759 cv
.750271 .679713 .66479 .901945 cmyk
f
292.09 123.491 mo
292.09 122.239 293.1 121.224 294.36 121.224 cv
295.61 121.224 296.62 122.239 296.62 123.491 cv
296.62 124.744 295.61 125.759 294.36 125.759 cv
293.1 125.759 292.09 124.744 292.09 123.491 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
168.5 192.266 mo
167.25 192.266 166.23 191.25 166.23 189.998 cv
166.23 188.745 167.25 187.73 168.5 187.73 cv
169.75 187.73 170.77 188.745 170.77 189.998 cv
170.77 191.25 169.75 192.266 168.5 192.266 cv
.750271 .679713 .66479 .901945 cmyk
f
166.23 189.998 mo
166.23 188.745 167.25 187.73 168.5 187.73 cv
169.75 187.73 170.77 188.745 170.77 189.998 cv
170.77 191.25 169.75 192.266 168.5 192.266 cv
167.25 192.266 166.23 191.25 166.23 189.998 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
197.41 169.588 mo
196.16 169.588 195.14 168.573 195.14 167.321 cv
195.14 166.068 196.16 165.053 197.41 165.053 cv
198.66 165.053 199.68 166.068 199.68 167.321 cv
199.68 168.573 198.66 169.588 197.41 169.588 cv
.761074 .678981 .648341 .889342 cmyk
f
195.14 167.321 mo
195.14 166.068 196.16 165.053 197.41 165.053 cv
198.66 165.053 199.68 166.068 199.68 167.321 cv
199.68 168.573 198.66 169.588 197.41 169.588 cv
196.16 169.588 195.14 168.573 195.14 167.321 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
282.45 93.62 mo
281.2 93.62 280.18 92.6 280.18 91.35 cv
280.18 90.1 281.2 89.08 282.45 89.08 cv
283.7 89.08 284.72 90.1 284.72 91.35 cv
284.72 92.6 283.7 93.62 282.45 93.62 cv
.750271 .679713 .66479 .901945 cmyk
f
280.18 91.35 mo
280.18 90.1 281.2 89.08 282.45 89.08 cv
283.7 89.08 284.72 90.1 284.72 91.35 cv
284.72 92.6 283.7 93.62 282.45 93.62 cv
281.2 93.62 280.18 92.6 280.18 91.35 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
246.45 90.22 mo
245.2 90.22 244.18 89.2 244.18 87.95 cv
244.18 86.7 245.2 85.68 246.45 85.68 cv
247.7 85.68 248.72 86.7 248.72 87.95 cv
248.72 89.2 247.7 90.22 246.45 90.22 cv
.750271 .679713 .66479 .901945 cmyk
f
244.18 87.95 mo
244.18 86.7 245.2 85.68 246.45 85.68 cv
247.7 85.68 248.72 86.7 248.72 87.95 cv
248.72 89.2 247.7 90.22 246.45 90.22 cv
245.2 90.22 244.18 89.2 244.18 87.95 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
309.95 87.38 mo
308.69 87.38 307.68 86.37 307.68 85.12 cv
307.68 83.8599 308.69 82.85 309.95 82.85 cv
311.2 82.85 312.21 83.8599 312.21 85.12 cv
312.21 86.37 311.2 87.38 309.95 87.38 cv
.750271 .679713 .66479 .901945 cmyk
f
307.68 85.12 mo
307.68 83.86 308.69 82.85 309.95 82.85 cv
311.2 82.85 312.21 83.86 312.21 85.12 cv
312.21 86.37 311.2 87.38 309.95 87.38 cv
308.69 87.38 307.68 86.37 307.68 85.12 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
291.52 56.2 mo
290.27 56.2 289.25 55.19 289.25 53.93 cv
289.25 52.68 290.27 51.67 291.52 51.67 cv
292.77 51.67 293.79 52.68 293.79 53.93 cv
293.79 55.19 292.77 56.2 291.52 56.2 cv
.750271 .679713 .66479 .901945 cmyk
f
289.25 53.93 mo
289.25 52.68 290.27 51.67 291.52 51.67 cv
292.77 51.67 293.79 52.68 293.79 53.93 cv
293.79 55.19 292.77 56.2 291.52 56.2 cv
290.27 56.2 289.25 55.19 289.25 53.93 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
291.52 155.982 mo
290.27 155.982 289.25 154.967 289.25 153.714 cv
289.25 152.462 290.27 151.447 291.52 151.447 cv
292.77 151.447 293.79 152.462 293.79 153.714 cv
293.79 154.967 292.77 155.982 291.52 155.982 cv
.750271 .679713 .66479 .901945 cmyk
f
289.25 153.714 mo
289.25 152.462 290.27 151.447 291.52 151.447 cv
292.77 151.447 293.79 152.462 293.79 153.714 cv
293.79 154.967 292.77 155.982 291.52 155.982 cv
290.27 155.982 289.25 154.967 289.25 153.714 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
215.38 125.384 mo
214.327 125.383 213.486 124.538 213.485 123.491 cv
213.486 122.445 214.327 121.6 215.38 121.599 cv
216.423 121.601 217.273 122.448 217.275 123.491 cv
217.273 124.536 216.423 125.382 215.38 125.384 cv
.750271 .679713 .654902 .901945 cmyk
f
215.38 125.759 mo
214.12 125.759 213.11 124.744 213.11 123.491 cv
213.11 123.491 li
213.485 123.491 li
213.11 123.491 li
213.11 122.239 214.12 121.224 215.38 121.224 cv
216.63 121.224 217.65 122.239 217.65 123.491 cv
217.65 124.744 216.63 125.759 215.38 125.759 cv
213.485 123.491 mo
213.486 124.538 214.327 125.383 215.38 125.384 cv
216.423 125.382 217.273 124.536 217.275 123.491 cv
217.275 123.491 li
217.273 122.448 216.423 121.601 215.38 121.599 cv
214.327 121.6 213.486 122.445 213.485 123.491 cv
213.485 123.491 li
f
213.11 123.491 mo
213.11 122.239 214.12 121.224 215.38 121.224 cv
216.63 121.224 217.65 122.239 217.65 123.491 cv
217.65 124.744 216.63 125.759 215.38 125.759 cv
214.12 125.759 213.11 124.744 213.11 123.491 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
220.94 142.659 mo
219.69 142.659 218.67 141.644 218.67 140.391 cv
218.67 139.139 219.69 138.124 220.94 138.124 cv
222.19 138.124 223.21 139.139 223.21 140.391 cv
223.21 141.644 222.19 142.659 220.94 142.659 cv
.761074 .678981 .648341 .889342 cmyk
f
218.67 140.391 mo
218.67 139.139 219.69 138.124 220.94 138.124 cv
222.19 138.124 223.21 139.139 223.21 140.391 cv
223.21 141.644 222.19 142.659 220.94 142.659 cv
219.69 142.659 218.67 141.644 218.67 140.391 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
133.63 182.911 mo
132.38 182.911 131.36 181.896 131.36 180.643 cv
131.36 179.391 132.38 178.376 133.63 178.376 cv
134.88 178.376 135.9 179.391 135.9 180.643 cv
135.9 181.896 134.88 182.911 133.63 182.911 cv
.750271 .679713 .66479 .901945 cmyk
f
131.36 180.643 mo
131.36 179.391 132.38 178.376 133.63 178.376 cv
134.88 178.376 135.9 179.391 135.9 180.643 cv
135.9 181.896 134.88 182.911 133.63 182.911 cv
132.38 182.911 131.36 181.896 131.36 180.643 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
111.52 156.373 mo
110.27 156.373 109.25 155.358 109.25 154.105 cv
109.25 152.853 110.27 151.838 111.52 151.838 cv
112.77 151.838 113.79 152.853 113.79 154.105 cv
113.79 155.358 112.77 156.373 111.52 156.373 cv
.750271 .679713 .66479 .901945 cmyk
f
109.25 154.105 mo
109.25 152.853 110.27 151.838 111.52 151.838 cv
112.77 151.838 113.79 152.853 113.79 154.105 cv
113.79 155.358 112.77 156.373 111.52 156.373 cv
110.27 156.373 109.25 155.358 109.25 154.105 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
32.151 159.384 mo
30.899 159.384 29.884 158.368 29.884 157.116 cv
29.884 155.863 30.899 154.848 32.151 154.848 cv
33.404 154.848 34.419 155.863 34.419 157.116 cv
34.419 158.368 33.404 159.384 32.151 159.384 cv
.750271 .679713 .66479 .901945 cmyk
f
29.884 157.116 mo
29.884 155.863 30.899 154.848 32.151 154.848 cv
33.404 154.848 34.419 155.863 34.419 157.116 cv
34.419 158.368 33.404 159.384 32.151 159.384 cv
30.899 159.384 29.884 158.368 29.884 157.116 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
48.592 173.557 mo
47.34 173.557 46.325 172.542 46.325 171.289 cv
46.325 170.037 47.34 169.021 48.592 169.021 cv
49.845 169.021 50.86 170.037 50.86 171.289 cv
50.86 172.542 49.845 173.557 48.592 173.557 cv
.750271 .679713 .66479 .901945 cmyk
f
46.325 171.289 mo
46.325 170.037 47.34 169.021 48.592 169.021 cv
49.845 169.021 50.86 170.037 50.86 171.289 cv
50.86 172.542 49.845 173.557 48.592 173.557 cv
47.34 173.557 46.325 172.542 46.325 171.289 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
88.844 180.643 mo
87.592 180.643 86.577 179.628 86.577 178.376 cv
86.577 177.123 87.592 176.108 88.844 176.108 cv
90.097 176.108 91.112 177.123 91.112 178.376 cv
91.112 179.628 90.097 180.643 88.844 180.643 cv
.750271 .679713 .66479 .901945 cmyk
f
86.577 178.376 mo
86.577 177.123 87.592 176.108 88.844 176.108 cv
90.097 176.108 91.112 177.123 91.112 178.376 cv
91.112 179.628 90.097 180.643 88.844 180.643 cv
87.592 180.643 86.577 179.628 86.577 178.376 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
62.766 159.384 mo
61.513 159.384 60.498 158.368 60.498 157.116 cv
60.498 155.863 61.513 154.848 62.766 154.848 cv
64.018 154.848 65.0329 155.863 65.0329 157.116 cv
65.0329 158.368 64.018 159.384 62.766 159.384 cv
.750271 .679713 .66479 .901945 cmyk
f
60.498 157.116 mo
60.498 155.863 61.513 154.848 62.766 154.848 cv
64.018 154.848 65.033 155.863 65.033 157.116 cv
65.033 158.368 64.018 159.384 62.766 159.384 cv
61.513 159.384 60.498 158.368 60.498 157.116 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
32.151 119.13 mo
30.899 119.13 29.884 118.12 29.884 116.86 cv
29.884 115.61 30.899 114.6 32.151 114.6 cv
33.404 114.6 34.419 115.61 34.419 116.86 cv
34.419 118.12 33.404 119.13 32.151 119.13 cv
.750271 .679713 .66479 .901945 cmyk
f
29.884 116.86 mo
29.884 115.61 30.899 114.6 32.151 114.6 cv
33.404 114.6 34.419 115.61 34.419 116.86 cv
34.419 118.12 33.404 119.13 32.151 119.13 cv
30.899 119.13 29.884 118.12 29.884 116.86 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
93.38 74.34 mo
92.127 74.34 91.112 73.33 91.112 72.08 cv
91.112 70.82 92.127 69.81 93.38 69.81 cv
94.632 69.81 95.648 70.82 95.648 72.08 cv
95.648 73.33 94.632 74.34 93.38 74.34 cv
.761074 .678981 .648341 .889342 cmyk
f
91.112 72.08 mo
91.112 70.82 92.127 69.81 93.38 69.81 cv
94.632 69.81 95.648 70.82 95.648 72.08 cv
95.648 73.33 94.632 74.34 93.38 74.34 cv
92.127 74.34 91.112 73.33 91.112 72.08 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
50.86 71.7899 mo
49.608 71.7899 48.592 70.78 48.592 69.53 cv
48.592 68.27 49.608 67.26 50.86 67.26 cv
52.113 67.26 53.128 68.27 53.128 69.53 cv
53.128 70.78 52.113 71.7899 50.86 71.7899 cv
.750271 .679713 .66479 .901945 cmyk
f
48.592 69.53 mo
48.592 68.27 49.608 67.26 50.86 67.26 cv
52.113 67.26 53.128 68.27 53.128 69.53 cv
53.128 70.78 52.113 71.79 50.86 71.79 cv
49.608 71.79 48.592 70.78 48.592 69.53 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
142.07 144.909 mo
141.027 144.907 140.177 144.06 140.175 143.016 cv
140.177 141.973 141.027 141.126 142.07 141.124 cv
143.113 141.126 143.963 141.973 143.965 143.016 cv
143.963 144.06 143.113 144.907 142.07 144.909 cv
.750271 .679713 .654902 .901945 cmyk
f
142.07 145.284 mo
140.82 145.284 139.8 144.269 139.8 143.016 cv
139.8 143.016 li
140.175 143.016 li
139.8 143.016 li
139.8 141.764 140.82 140.749 142.07 140.749 cv
143.32 140.749 144.34 141.764 144.34 143.016 cv
144.34 144.269 143.32 145.284 142.07 145.284 cv
140.175 143.016 mo
140.177 144.06 141.027 144.907 142.07 144.909 cv
143.113 144.907 143.963 144.06 143.965 143.016 cv
143.965 143.016 li
143.963 141.973 143.113 141.126 142.07 141.124 cv
141.027 141.126 140.177 141.973 140.175 143.016 cv
140.175 143.016 li
f
139.8 143.016 mo
139.8 141.764 140.82 140.749 142.07 140.749 cv
143.32 140.749 144.34 141.764 144.34 143.016 cv
144.34 144.269 143.32 145.284 142.07 145.284 cv
140.82 145.284 139.8 144.269 139.8 143.016 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
185.51 142.659 mo
184.25 142.659 183.24 141.644 183.24 140.391 cv
183.24 139.139 184.25 138.124 185.51 138.124 cv
186.76 138.124 187.77 139.139 187.77 140.391 cv
187.77 141.644 186.76 142.659 185.51 142.659 cv
.761074 .678981 .648341 .889342 cmyk
f
183.24 140.391 mo
183.24 139.139 184.25 138.124 185.51 138.124 cv
186.76 138.124 187.77 139.139 187.77 140.391 cv
187.77 141.644 186.76 142.659 185.51 142.659 cv
184.25 142.659 183.24 141.644 183.24 140.391 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
157.55 88.34 mo
156.3 88.34 155.28 87.33 155.28 86.07 cv
155.28 84.82 156.3 83.81 157.55 83.81 cv
158.8 83.81 159.82 84.82 159.82 86.07 cv
159.82 87.33 158.8 88.34 157.55 88.34 cv
.750271 .679713 .66479 .901945 cmyk
f
155.28 86.07 mo
155.28 84.82 156.3 83.81 157.55 83.81 cv
158.8 83.81 159.82 84.82 159.82 86.07 cv
159.82 87.33 158.8 88.34 157.55 88.34 cv
156.3 88.34 155.28 87.33 155.28 86.07 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
208.97 139.757 mo
207.71 139.757 206.7 138.741 206.7 137.489 cv
206.7 136.236 207.71 135.221 208.97 135.221 cv
210.22 135.221 211.23 136.236 211.23 137.489 cv
211.23 138.741 210.22 139.757 208.97 139.757 cv
.761074 .678981 .648341 .889342 cmyk
f
206.7 137.489 mo
206.7 136.236 207.71 135.221 208.97 135.221 cv
210.22 135.221 211.23 136.236 211.23 137.489 cv
211.23 138.741 210.22 139.757 208.97 139.757 cv
207.71 139.757 206.7 138.741 206.7 137.489 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
244.75 109.78 mo
243.5 109.78 242.48 108.76 242.48 107.51 cv
242.48 106.26 243.5 105.24 244.75 105.24 cv
246 105.24 247.02 106.26 247.02 107.51 cv
247.02 108.76 246 109.78 244.75 109.78 cv
.750271 .679713 .66479 .901945 cmyk
f
242.48 107.51 mo
242.48 106.26 243.5 105.24 244.75 105.24 cv
246 105.24 247.02 106.26 247.02 107.51 cv
247.02 108.76 246 109.78 244.75 109.78 cv
243.5 109.78 242.48 108.76 242.48 107.51 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
150.07 48.27 mo
148.82 48.27 147.81 47.25 147.81 46 cv
147.81 44.75 148.82 43.7299 150.07 43.7299 cv
151.33 43.7299 152.34 44.75 152.34 46 cv
152.34 47.25 151.33 48.27 150.07 48.27 cv
.750271 .679713 .66479 .901945 cmyk
f
147.81 46 mo
147.81 44.75 148.82 43.73 150.07 43.73 cv
151.33 43.73 152.34 44.75 152.34 46 cv
152.34 47.25 151.33 48.27 150.07 48.27 cv
148.82 48.27 147.81 47.25 147.81 46 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
178.42 50.5299 mo
177.17 50.5299 176.15 49.52 176.15 48.27 cv
176.15 47.0099 177.17 46 178.42 46 cv
179.67 46 180.69 47.0099 180.69 48.27 cv
180.69 49.52 179.67 50.5299 178.42 50.5299 cv
.750271 .679713 .66479 .901945 cmyk
f
176.15 48.27 mo
176.15 47.01 177.17 46 178.42 46 cv
179.67 46 180.69 47.01 180.69 48.27 cv
180.69 49.52 179.67 50.53 178.42 50.53 cv
177.17 50.53 176.15 49.52 176.15 48.27 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
232.84 46 mo
231.59 46 230.58 44.98 230.58 43.7299 cv
230.58 42.48 231.59 41.46 232.84 41.46 cv
234.1 41.46 235.11 42.48 235.11 43.7299 cv
235.11 44.98 234.1 46 232.84 46 cv
.750271 .679713 .66479 .901945 cmyk
f
230.58 43.73 mo
230.58 42.48 231.59 41.46 232.84 41.46 cv
234.1 41.46 235.11 42.48 235.11 43.73 cv
235.11 44.98 234.1 46 232.84 46 cv
231.59 46 230.58 44.98 230.58 43.73 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
200.81 90.79 mo
199.56 90.79 198.55 89.77 198.55 88.52 cv
198.55 87.27 199.56 86.25 200.81 86.25 cv
202.07 86.25 203.08 87.27 203.08 88.52 cv
203.08 89.77 202.07 90.79 200.81 90.79 cv
.750271 .679713 .66479 .901945 cmyk
f
198.55 88.52 mo
198.55 87.27 199.56 86.25 200.81 86.25 cv
202.07 86.25 203.08 87.27 203.08 88.52 cv
203.08 89.77 202.07 90.79 200.81 90.79 cv
199.56 90.79 198.55 89.77 198.55 88.52 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
268.28 39.19 mo
267.03 39.19 266.01 38.18 266.01 36.93 cv
266.01 35.67 267.03 34.66 268.28 34.66 cv
269.53 34.66 270.55 35.67 270.55 36.93 cv
270.55 38.18 269.53 39.19 268.28 39.19 cv
.750271 .679713 .66479 .901945 cmyk
f
266.01 36.93 mo
266.01 35.67 267.03 34.66 268.28 34.66 cv
269.53 34.66 270.55 35.67 270.55 36.93 cv
270.55 38.18 269.53 39.19 268.28 39.19 cv
267.03 39.19 266.01 38.18 266.01 36.93 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
209.32 33.53 mo
208.06 33.53 207.05 32.51 207.05 31.26 cv
207.05 30.01 208.06 28.99 209.32 28.99 cv
210.57 28.99 211.58 30.01 211.58 31.26 cv
211.58 32.51 210.57 33.53 209.32 33.53 cv
.750271 .679713 .66479 .901945 cmyk
f
207.05 31.26 mo
207.05 30.01 208.06 28.99 209.32 28.99 cv
210.57 28.99 211.58 30.01 211.58 31.26 cv
211.58 32.51 210.57 33.53 209.32 33.53 cv
208.06 33.53 207.05 32.51 207.05 31.26 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
188.91 108.36 mo
187.65 108.36 186.64 107.34 186.64 106.09 cv
186.64 104.84 187.65 103.82 188.91 103.82 cv
190.16 103.82 191.18 104.84 191.18 106.09 cv
191.18 107.34 190.16 108.36 188.91 108.36 cv
.750271 .679713 .66479 .901945 cmyk
f
186.64 106.09 mo
186.64 104.84 187.65 103.82 188.91 103.82 cv
190.16 103.82 191.18 104.84 191.18 106.09 cv
191.18 107.34 190.16 108.36 188.91 108.36 cv
187.65 108.36 186.64 107.34 186.64 106.09 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
92.529 138.974 mo
91.277 138.974 90.262 137.959 90.262 136.706 cv
90.262 135.454 91.277 134.439 92.529 134.439 cv
93.7819 134.439 94.797 135.454 94.797 136.706 cv
94.797 137.959 93.7819 138.974 92.529 138.974 cv
.750271 .679713 .66479 .901945 cmyk
f
90.262 136.706 mo
90.262 135.454 91.277 134.439 92.529 134.439 cv
93.782 134.439 94.797 135.454 94.797 136.706 cv
94.797 137.959 93.782 138.974 92.529 138.974 cv
91.277 138.974 90.262 137.959 90.262 136.706 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
243.6 174.393 mo
242.35 174.393 241.33 173.378 241.33 172.125 cv
241.33 170.873 242.35 169.858 243.6 169.858 cv
244.85 169.858 245.87 170.873 245.87 172.125 cv
245.87 173.378 244.85 174.393 243.6 174.393 cv
.750271 .679713 .66479 .901945 cmyk
f
241.33 172.125 mo
241.33 170.873 242.35 169.858 243.6 169.858 cv
244.85 169.858 245.87 170.873 245.87 172.125 cv
245.87 173.378 244.85 174.393 243.6 174.393 cv
242.35 174.393 241.33 173.378 241.33 172.125 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
220.14 180.077 mo
218.89 180.077 217.87 179.061 217.87 177.809 cv
217.87 176.556 218.89 175.541 220.14 175.541 cv
221.39 175.541 222.41 176.556 222.41 177.809 cv
222.41 179.061 221.39 180.077 220.14 180.077 cv
.750271 .679713 .66479 .901945 cmyk
f
217.87 177.809 mo
217.87 176.556 218.89 175.541 220.14 175.541 cv
221.39 175.541 222.41 176.556 222.41 177.809 cv
222.41 179.061 221.39 180.077 220.14 180.077 cv
218.89 180.077 217.87 179.061 217.87 177.809 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
147.95 121.399 mo
146.69 121.399 145.68 120.384 145.68 119.13 cv
145.68 117.88 146.69 116.86 147.95 116.86 cv
149.2 116.86 150.21 117.88 150.21 119.13 cv
150.21 120.384 149.2 121.399 147.95 121.399 cv
.750271 .679713 .66479 .901945 cmyk
f
145.68 119.13 mo
145.68 117.88 146.69 116.86 147.95 116.86 cv
149.2 116.86 150.21 117.88 150.21 119.13 cv
150.21 120.384 149.2 121.399 147.95 121.399 cv
146.69 121.399 145.68 120.384 145.68 119.13 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H 1 GetGlyphDirectory
54 <001C60D8A8C9B7A73DB9D7B052DDEC2A5C8CA4C09ED63BA9D8BD514068B7
BB6278BC7AF8E1A2C8793C1C2BBD6D1B76D96729B20372993FFB19D9708AE64E
A15F5B383E0D4F3C7E7D8496E4483F947092EF549A135E21AC3D3D7CDCAD03D5
560C4310B2165BEF7C446FC945E2B7C359B017073819F85F1D0B8AA9503377B6
1AD112CCFC8CFDF221C32403AAF12647CDB36A6F2B4AC6A27F16F9E90655F3F5
3ABFC24F8032A45E63DC8E7913D67FC15D35E3B413B0F137D1FA68CC4445FB3A
4278F04F64C797189524D7B5D3F8546776189E08FEFF236771D11126D4CF0ABF
117282DF> |
!
end
end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
354.55 180.85 mo
(\0006)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
354.55 180.85 mo
(\0006) false chp
.34429 lw
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
360.575 180.85 mo
(\000H)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
360.575 180.85 mo
(\000H) false chp
@
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H 1 GetGlyphDirectory
81 <001C60D8A8C9B7A73DB97D2EA733FEF9D2030029A5B2CF3B73FD3A017E40
3C7A7F9D86A600F5CA059F84CCCD28FD5E3C2836D8BCB466DDAA22DF5C96BA4E
9D33A71AF7D3DB5B984D37F308AF6E98148C08AC3D8187DD889E07605A4D6C27
91634517BDF87F17CE0B8D6E5CB87F3548E78F04628C0A6D80958439CE6AAB2F
332503B61365172184BDB9AB347893A9B5FBCB8B7E77E4909B88C3FAAA5D8ABA
37287B6C4E30FB1A38837394659F56FAACCFFEF31089BC2720E27F908DB1CF2A
91E8283B42A9> |
!
end
end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
366.6 180.85 mo
(\000Q)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
366.6 180.85 mo
(\000Q) false chp
@
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H 1 GetGlyphDirectory
86 <001C60D8A8C9B7A73DB923D5A49D04CBD65263719474C80BA97F6F133EAA
4FCBFFA43F60F895C3C414B7030ECA67E2674F62D2101C594B032EE90D99376A
B7F0760AFAD806D2D95642E44E5A2972877B76376DEB7CB434DCD68736F1E6E5
DBDFA54FD232EB08D99648B487B3E4ED2484C351F3C5ECD6F9DC9B48E8E90C5C
9E57A52E4F0E9F094FF68532358CE3A23923A3205C06E22076925C0822C62316
37F06A3E9B8D1291F9E72FC9834B88C703249C81A90955A609860869BCF7333D
96CF9A54D009C595DB9C0AD3F8C33F579CD709F88D0AB96D869C241E584F1BDA
4F8C3C79B3580F4553FAE866201562F5C8B6C736572DF3A478581D720C8E0B81> |
!
end
end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
372.625 180.85 mo
(\000V)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
372.625 180.85 mo
(\000V) false chp
@
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H 1 GetGlyphDirectory
82 <001C60D8A8C9B7A73DB69981D0C259376C8A5DD6859FA4C644174BA1BD93
78F08BC6C5746C8458A0F5EDE6F68F6FE26D9C5EB4C467C31A5FE9E90E9C2A36
375CB86A13DDC85D1181B4F95BD95E297453C2C6FDF82458BD6B7FC4C12762A2
F00ECB6B5D5B25661F7C0083F60573172BA4A0B97A5807D9A9EE9E0EA705666F
4A2711E064C01F> |
!
end
end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
378.65 180.85 mo
(\000R)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
378.65 180.85 mo
(\000R) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
384.675 180.85 mo
(\000U)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
384.675 180.85 mo
(\000U) false chp
@
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H 1 GetGlyphDirectory
49 <001C60D8A8C9B7A73DB932C28C527522C3F97F2461044604912B3EF72647
1AE21887649D4FAE0A0085A897EB3E21F714D40654C38D277909F7E6E1EA7587
C43A23B3636CAE79AF47BCE5EE2844406B0EED7D86D68EDEF0B716D6F836E02E
FF83BB3CA8CB20D83837A71927D20EC5ABBFE2416F5D24FCD5797029C342E6E5
5E8782CE9FFCF98AC790DB4B8037> |
!
end
end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
360.63 195.3 mo
(\0001)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
360.63 195.3 mo
(\0001) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
366.63 195.3 mo
(\000R)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
366.63 195.3 mo
(\000R) false chp
@
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H 1 GetGlyphDirectory
71 <001C60D8A8C9B7A73DB9DE1BCDD5A807EE39F8633609A4C4F16F008DC407
3956B2C1B613960FF999659DC8B51CF2AF3898B79A73796D4AB8F60B4FFFB8C6
5DA62D8C6465F03752C32EA337C501E07BCFBE25277D880FFFCBCCBD2DCBEA7D
49F89E2FC8D0F3091ABAA3FE7CD0F6BF51D014897054208A250549C4A7BAFB58
C317A7C24E6596ABBB30409DB93B5CAA7D0EB99024D96D46DD14CDF99ED1D25E
FB7C84EF910636F16E0DA5E7D5FC5E9E9EB1C73F45CB1C28E243DC84EDAB8A20
A2BC5C3C7BC51B21903D7DFF4A4256FE25EBC7C7FA> |
!
end
end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
372.63 195.3 mo
(\000G)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
372.63 195.3 mo
(\000G) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
378.63 195.3 mo
(\000H)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
378.63 195.3 mo
(\000H) false chp
@
333.47 173.911 mo
333.47 171.563 335.38 169.659 337.73 169.659 cv
340.07 169.659 341.98 171.563 341.98 173.911 cv
341.98 176.259 340.07 178.163 337.73 178.163 cv
335.38 178.163 333.47 176.259 333.47 173.911 cv
cp
ef
.75075 lw
333.47 173.911 mo
333.47 171.563 335.38 169.659 337.73 169.659 cv
340.07 169.659 341.98 171.563 341.98 173.911 cv
341.98 176.259 340.07 178.163 337.73 178.163 cv
335.38 178.163 333.47 176.259 333.47 173.911 cv
cp
@
343.07 151.187 mo
334.89 141.313 li
326.71 151.187 li
343.07 151.187 li
cp
0 1 1 0 cmyk
ef
343.07 151.187 mo
334.89 141.313 li
326.71 151.187 li
343.07 151.187 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
355.25 143.875 mo
(\000$)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
355.25 143.875 mo
(\000$) false chp
.34429 lw
@
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H 1 GetGlyphDirectory
70 <001C60D8A8C9B7A73DB9CA3CB59A9362C567E6693756DF87B8701FBEA898
1D0FB41BC57FB14082E0302C46C467D65EA7EED5997CA9CC4C07D177F85EA614
2B8109737791C7B75F03EC4D414D20766F94E802E055EF0E5AF698799D84806F
83F6347388411C500D7944BE94549DBBADCD7CDD5F3B250E41D2BDB64BE408C8
8E0783A9CB9044EA5B4469936D654710860D0CE082D416E670610318DCB9A758
B604E445D057A118ED8BE989140932> |
!
end
end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
361.25 143.875 mo
(\000F)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
361.25 143.875 mo
(\000F) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
367.25 143.875 mo
(\000R)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
367.25 143.875 mo
(\000R) false chp
@
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H 1 GetGlyphDirectory
88 <001C60D8A8C9B7A73DB9114A3461279584401A3A507FBD7542ABC441C965
E6CA1655D8DD86D14E4F64F71BBD8F6A59EC0A2EF26EB159A6ADDE326B14529C
32BF45A6BE91B34F414007847EBA311FAAFD5214E94649ABFE18CEE0CAFE3CCD
4439A54BD2DA88233ED0E38506F4A028C1B8219F71B33C28189EA04579D01127
BB21FC18D633233A400D0CB6336C78C9AA986D0C031E3CF8DF22E8A5CF7BBE93
F564A014AC01D83B553F6A8F688CA063C2994DD37C4259F6B34EBA854B90CF18
CC4F29> |
!
end
end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
373.25 143.875 mo
(\000X)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
373.25 143.875 mo
(\000X) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
379.25 143.875 mo
(\000V)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
379.25 143.875 mo
(\000V) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
385.25 143.875 mo
(\000W)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
385.25 143.875 mo
(\000W) false chp
@
%ADOBeginSubsetFont: JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H 1 GetGlyphDirectory
76 <001C60D8A8C9B7A73DB9569388B530AA69A814780F04C0D0891B66556132
542C171BD2EA0875B17FB62A498137AA36ED9317F24C9A265F4E9A80213C7581
7936CF88855AE783C3200ED8BAB3E514B0F3675AC005A984E1300BE3AB9F059A
1E769D0B04C27E73DE797CBE27CEE57EFD8A61BE00EE7A34C5DEA0BC68905399
8C549C598091C265DC92224E3190B4EB4422DF93A2E24E69A294E18C> |
!
end
end end
%ADOEndSubsetFont
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
391.25 143.875 mo
(\000L)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
391.25 143.875 mo
(\000L) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
397.25 143.875 mo
(\000F)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
397.25 143.875 mo
(\000F) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
403.985 143.875 mo
(\000\003)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
403.985 143.875 mo
(\000\003) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
361.3 158.325 mo
(\0006)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
361.3 158.325 mo
(\0006) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
367.325 158.325 mo
(\000R)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
367.325 158.325 mo
(\000R) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
373.35 158.325 mo
(\000X)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
373.35 158.325 mo
(\000X) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
379.375 158.325 mo
(\000U)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
379.375 158.325 mo
(\000U) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
385.4 158.325 mo
(\000F)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
385.4 158.325 mo
(\000F) false chp
@
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
391.425 158.325 mo
(\000H)sh
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H findfont [12.05 0 0 -12.05 0 0 ]msf
391.425 158.325 mo
(\000H) false chp
@
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H-Identity-H uf
/JCNMDI+#e5#ae#8b#e4#bd#93-GBK-EUC-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
